(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[107],{9960:function(e,t,n){(function(){"use strict";function e(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var t,r="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e},a=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var r=e[t];if(r&&r.Math==Math)return r}throw Error("Cannot find global object")}(this);function i(e,t){if(t)e:{var n=a;e=e.split(".");for(var i=0;i<e.length-1;i++){var s=e[i];if(!(s in n))break e;n=n[s]}(t=t(i=n[e=e[e.length-1]]))!=i&&null!=t&&r(n,e,{configurable:!0,writable:!0,value:t})}}function s(t){var n="undefined"!=typeof Symbol&&Symbol.iterator&&t[Symbol.iterator];return n?n.call(t):{next:e(t)}}function o(e){if(!(e instanceof Array)){e=s(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}i("Symbol",function(e){function t(e,t){this.g=e,r(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.g};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",a=0;return function e(r){if(this instanceof e)throw TypeError("Symbol is not a constructor");return new t(n+(r||"")+"_"+a++,r)}}),i("Symbol.iterator",function(t){if(t)return t;t=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),i=0;i<n.length;i++){var s=a[n[i]];"function"==typeof s&&"function"!=typeof s.prototype[t]&&r(s.prototype,t,{configurable:!0,writable:!0,value:function(){var t;return(t={next:t=e(this)})[Symbol.iterator]=function(){return this},t}})}return t});var u,p,l="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)p=Object.setPrototypeOf;else{e:{var c={};try{c.__proto__={a:!0},A=c.a;break e}catch(e){}A=!1}p=A?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw TypeError(e+" is not extensible");return e}:null}var h=p;function m(e,t){if(e.prototype=l(t.prototype),e.prototype.constructor=e,h)h(e,t);else for(var n in t)if("prototype"!=n){if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(t,n);r&&Object.defineProperty(e,n,r)}else e[n]=t[n]}e.ea=t.prototype}function d(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.s=this.m=0,this.j=null}function f(e){if(e.l)throw TypeError("Generator is already running");e.l=!0}function y(e,t){e.j={U:t,V:!0},e.g=e.m||e.s}function g(e,t,n){return e.g=n,{value:t}}function v(e){this.g=new d,this.h=e}function b(e,t,n,r){try{var a=t.call(e.g.i,n);if(!(a instanceof Object))throw TypeError("Iterator result "+a+" is not an object");if(!a.done)return e.g.l=!1,a;var i=a.value}catch(t){return e.g.i=null,y(e.g,t),x(e)}return e.g.i=null,r.call(e.g,i),x(e)}function x(e){for(;e.g.g;)try{var t=e.h(e.g);if(t)return e.g.l=!1,{value:t.value,done:!1}}catch(t){e.g.h=void 0,y(e.g,t)}if(e.g.l=!1,e.g.j){if(t=e.g.j,e.g.j=null,t.V)throw t.U;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function N(e){this.next=function(t){return f(e.g),e.g.i?t=b(e,e.g.i.next,t,e.g.o):(e.g.o(t),t=x(e)),t},this.throw=function(t){return f(e.g),e.g.i?t=b(e,e.g.i.throw,t,e.g.o):(y(e.g,t),t=x(e)),t},this.return=function(t){var n;return f(e.g),(n=e.g.i)?b(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),x(e))},this[Symbol.iterator]=function(){return this}}function T(e,t){return t=new N(new v(t)),h&&e.prototype&&h(t,e.prototype),t}d.prototype.o=function(e){this.h=e},d.prototype.return=function(e){this.j={return:e},this.g=this.s};var w="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r)for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e};i("Object.assign",function(e){return e||w}),i("Promise",function(e){function t(e){this.h=0,this.i=void 0,this.g=[],this.o=!1;var t=this.j();try{e(t.resolve,t.reject)}catch(e){t.reject(e)}}function n(){this.g=null}function r(e){return e instanceof t?e:new t(function(t){t(e)})}if(e)return e;n.prototype.h=function(e){if(null==this.g){this.g=[];var t=this;this.i(function(){t.l()})}this.g.push(e)};var i=a.setTimeout;n.prototype.i=function(e){i(e,0)},n.prototype.l=function(){for(;this.g&&this.g.length;){var e=this.g;this.g=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(e){this.j(e)}}}this.g=null},n.prototype.j=function(e){this.i(function(){throw e})},t.prototype.j=function(){function e(e){return function(r){n||(n=!0,e.call(t,r))}}var t=this,n=!1;return{resolve:e(this.C),reject:e(this.l)}},t.prototype.C=function(e){if(e===this)this.l(TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.F(e);else{switch(typeof e){case"object":var n=null!=e;break;case"function":n=!0;break;default:n=!1}n?this.u(e):this.m(e)}},t.prototype.u=function(e){var t=void 0;try{t=e.then}catch(e){this.l(e);return}"function"==typeof t?this.G(t,e):this.m(e)},t.prototype.l=function(e){this.s(2,e)},t.prototype.m=function(e){this.s(1,e)},t.prototype.s=function(e,t){if(0!=this.h)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.h);this.h=e,this.i=t,2===this.h&&this.D(),this.A()},t.prototype.D=function(){var e=this;i(function(){if(e.B()){var t=a.console;void 0!==t&&t.error(e.i)}},1)},t.prototype.B=function(){if(this.o)return!1;var e=a.CustomEvent,t=a.Event,n=a.dispatchEvent;return void 0===n||("function"==typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"==typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=a.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.i,n(e))},t.prototype.A=function(){if(null!=this.g){for(var e=0;e<this.g.length;++e)o.h(this.g[e]);this.g=null}};var o=new n;return t.prototype.F=function(e){var t=this.j();e.J(t.resolve,t.reject)},t.prototype.G=function(e,t){var n=this.j();try{e.call(t,n.resolve,n.reject)}catch(e){n.reject(e)}},t.prototype.then=function(e,n){function r(e,t){return"function"==typeof e?function(t){try{a(e(t))}catch(e){i(e)}}:t}var a,i,s=new t(function(e,t){a=e,i=t});return this.J(r(e,a),r(n,i)),s},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.J=function(e,t){function n(){switch(r.h){case 1:e(r.i);break;case 2:t(r.i);break;default:throw Error("Unexpected state: "+r.h)}}var r=this;null==this.g?o.h(n):this.g.push(n),this.o=!0},t.resolve=r,t.reject=function(e){return new t(function(t,n){n(e)})},t.race=function(e){return new t(function(t,n){for(var a=s(e),i=a.next();!i.done;i=a.next())r(i.value).J(t,n)})},t.all=function(e){var n=s(e),a=n.next();return a.done?r([]):new t(function(e,t){var i=[],s=0;do i.push(void 0),s++,r(a.value).J(function(t){return function(n){i[t]=n,0==--s&&e(i)}}(i.length-1),t),a=n.next();while(!a.done)})},t}),i("Object.is",function(e){return e||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}}),i("Array.prototype.includes",function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var r=n.length;for(0>(t=t||0)&&(t=Math.max(t+r,0));t<r;t++){var a=n[t];if(a===e||Object.is(a,e))return!0}return!1}}),i("String.prototype.includes",function(e){return e||function(e,t){if(null==this)throw TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw TypeError("First argument to String.prototype.includes must not be a regular expression");return -1!==this.indexOf(e,t||0)}}),i("Array.prototype.keys",function(e){return e||function(){var e,t,n,r,a;return e=this,t=function(e){return e},e instanceof String&&(e+=""),n=0,r=!1,(a={next:function(){if(!r&&n<e.length){var a=n++;return{value:t(a,e[a]),done:!1}}return r=!0,{done:!0,value:void 0}}})[Symbol.iterator]=function(){return a},a}});var S=this||self;function _(e,t){e=e.split(".");var n,r=S;for((e[0]in r)||void 0===r.execScript||r.execScript("var "+e[0]);e.length&&(n=e.shift());)e.length||void 0===t?r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}:r[n]=t}function O(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var A,E,M,I="undefined"!=typeof TextDecoder,k="undefined"!=typeof TextEncoder;function F(e){if(k)e=(M||(M=new TextEncoder)).encode(e);else{var t=void 0;t=void 0!==t&&t;for(var n=0,r=new Uint8Array(3*e.length),a=0;a<e.length;a++){var i=e.charCodeAt(a);if(128>i)r[n++]=i;else{if(2048>i)r[n++]=i>>6|192;else{if(55296<=i&&57343>=i){if(56319>=i&&a<e.length){var s=e.charCodeAt(++a);if(56320<=s&&57343>=s){i=1024*(i-55296)+s-56320+65536,r[n++]=i>>18|240,r[n++]=i>>12&63|128,r[n++]=i>>6&63|128,r[n++]=63&i|128;continue}a--}if(t)throw Error("Found an unpaired surrogate");i=65533}r[n++]=i>>12|224,r[n++]=i>>6&63|128}r[n++]=63&i|128}}e=r.subarray(0,n)}return e}var C={},D=null;function L(e,t){void 0===t&&(t=0),R(),t=C[t];for(var n=Array(Math.floor(e.length/3)),r=t[64]||"",a=0,i=0;a<e.length-2;a+=3){var s=e[a],o=e[a+1],u=e[a+2],p=t[s>>2];s=t[(3&s)<<4|o>>4],o=t[(15&o)<<2|u>>6],u=t[63&u],n[i++]=p+s+o+u}switch(p=0,u=r,e.length-a){case 2:u=t[(15&(p=e[a+1]))<<2]||r;case 1:e=e[a],n[i]=t[e>>2]+t[(3&e)<<4|p>>4]+u+r}return n.join("")}function R(){if(!D){D={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var r=e.concat(t[n].split(""));C[n]=r;for(var a=0;a<r.length;a++){var i=r[a];void 0===D[i]&&(D[i]=a)}}}}var j,z="function"==typeof Uint8Array.prototype.slice;function V(e,t,n){return t===n?j||(j=new Uint8Array(0)):z?e.slice(t,n):new Uint8Array(e.subarray(t,n))}var P=0,B=0;function U(e,t){t=void 0!==(t=void 0===t?{}:t).v&&t.v,this.h=null,this.g=this.j=this.l=0,this.m=!1,this.v=t,e&&$(this,e)}function $(e,t){var n,r,a,i,s;t=t.constructor===Uint8Array?t:t.constructor===ArrayBuffer?new Uint8Array(t):t.constructor===Array?new Uint8Array(t):t.constructor===String?((a=3*(r=(n=t).length)/4)%3?a=Math.floor(a):-1!="=.".indexOf(n[r-1])&&(a=-1!="=.".indexOf(n[r-2])?a-2:a-1),i=new Uint8Array(a),s=0,function(e,t){function n(t){for(;r<e.length;){var n=e.charAt(r++),a=D[n];if(null!=a)return a;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}R();for(var r=0;;){var a=n(-1),i=n(0),s=n(64),o=n(64);if(64===o&&-1===a)break;t(a<<2|i>>4),64!=s&&(t(i<<4&240|s>>2),64!=o&&t(s<<6&192|o))}}(n,function(e){i[s++]=e}),i.subarray(0,s)):t instanceof Uint8Array?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):new Uint8Array(0),e.h=t,e.l=0,e.j=e.h.length,e.g=e.l}function H(e){for(var t=128,n=0,r=0,a=0;4>a&&128<=t;a++)n|=(127&(t=e.h[e.g++]))<<7*a;if(128<=t&&(n|=(127&(t=e.h[e.g++]))<<28,r|=(127&t)>>4),128<=t)for(a=0;5>a&&128<=t;a++)r|=(127&(t=e.h[e.g++]))<<7*a+3;if(128>t)return e=n>>>0,(r=2147483648&(t=r>>>0))&&(t=~t>>>0,0==(e=~e+1>>>0)&&(t=t+1>>>0)),e=4294967296*t+(e>>>0),r?-e:e;e.m=!0}U.prototype.reset=function(){this.g=this.l},U.prototype.i=function(){var e=this.h,t=e[this.g],n=127&t;return 128>t?(this.g+=1,n):(n|=(127&(t=e[this.g+1]))<<7,128>t)?(this.g+=2,n):(n|=(127&(t=e[this.g+2]))<<14,128>t)?(this.g+=3,n):(n|=(127&(t=e[this.g+3]))<<21,128>t)?(this.g+=4,n):(n|=(15&(t=e[this.g+4]))<<28,128>t)?(this.g+=5,n>>>0):(this.g+=5,128<=e[this.g++]&&128<=e[this.g++]&&128<=e[this.g++]&&128<=e[this.g++]&&this.g++,n)},U.prototype.o=function(){var e=this.h[this.g],t=this.h[this.g+1],n=this.h[this.g+2],r=this.h[this.g+3];return this.g+=4,e=2*((n=(e<<0|t<<8|n<<16|r<<24)>>>0)>>31)+1,t=n>>>23&255,n&=8388607,255==t?n?NaN:1/0*e:0==t?1401298464324817e-60*e*n:e*Math.pow(2,t-150)*(n+8388608)};var G=[];function W(){this.g=new Uint8Array(64),this.h=0}function q(e,t){for(;127<t;)e.push(127&t|128),t>>>=7;e.push(t)}function K(e){var t={},n=void 0!==t.N&&t.N;this.o={v:void 0!==t.v&&t.v},this.N=n,t=this.o,G.length?(n=G.pop(),t&&(n.v=t.v),e&&$(n,e),e=n):e=new U(e,t),this.g=e,this.m=this.g.g,this.h=this.i=this.l=-1,this.j=!1}function X(e){var t=e.g;if((t=t.g==t.j)||(t=e.j)||(t=(t=e.g).m||0>t.g||t.g>t.j),t)return!1;e.m=e.g.g;var n=7&(t=e.g.i());return 0!=n&&5!=n&&1!=n&&2!=n&&3!=n&&4!=n?(e.j=!0,!1):(e.i=t,e.l=t>>>3,e.h=n,!0)}function Y(e,t,n){var r=e.g.j,a=e.g.i(),i=e.g.g+a;if(e.g.j=i,n(t,e),0!=(n=i-e.g.g))throw Error("Message parsing ended unexpectedly. Expected to read "+a+" bytes, instead read "+(a-n)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.g.g=i,e.g.j=r,t}function Q(e){return e.g.o()}function J(e){var t=e.g.i(),n=(e=e.g).g;if(e.g+=t,e=e.h,I)(r=E)||(r=E=new TextDecoder("utf-8",{fatal:!1})),r=r.decode(e.subarray(n,n+t));else{t=n+t;for(var r,a,i,s,o=[],u=null;n<t;)128>(a=e[n++])?o.push(a):224>a?n>=t?o.push(65533):(i=e[n++],194>a||128!=(192&i)?(n--,o.push(65533)):o.push((31&a)<<6|63&i)):240>a?n>=t-1?o.push(65533):128!=(192&(i=e[n++]))||224===a&&160>i||237===a&&160<=i||128!=(192&(r=e[n++]))?(n--,o.push(65533)):o.push((15&a)<<12|(63&i)<<6|63&r):244>=a?n>=t-2?o.push(65533):128!=(192&(i=e[n++]))||0!=(a<<28)+(i-144)>>30||128!=(192&(r=e[n++]))||128!=(192&(s=e[n++]))?(n--,o.push(65533)):(a=((7&a)<<18|(63&i)<<12|(63&r)<<6|63&s)-65536,o.push((a>>10&1023)+55296,(1023&a)+56320)):o.push(65533),8192<=o.length&&(u=O(u,o),o.length=0);r=O(u,o)}return r}function Z(e,t,n){var r=e.g.i();for(r=e.g.g+r;e.g.g<r;)n.push(t.call(e.g))}function ee(e,t){2==e.h?Z(e,U.prototype.o,t):t.push(Q(e))}function et(){this.h=[],this.i=0,this.g=new W}function en(e,t){0!==t.length&&(e.h.push(t),e.i+=t.length)}function er(e){var t=e.i+e.g.length();if(0===t)return new Uint8Array(0);t=new Uint8Array(t);for(var n=e.h,r=n.length,a=0,i=0;i<r;i++){var s=n[i];0!==s.length&&(t.set(s,a),a+=s.length)}return 0!==(r=(n=e.g).h)&&(t.set(n.g.subarray(0,r),a),n.h=0),e.h=[t],t}function ea(e,t,n){if(null!=n){q(e.g,8*t+5),e=e.g;var r=n;0===(r=(n=0>r?1:0)?-r:r)?0<1/r?P=B=0:(B=0,P=2147483648):isNaN(r)?(B=0,P=2147483647):34028234663852886e22<r?(B=0,P=(n<<31|2139095040)>>>0):11754943508222875e-54>r?(B=0,P=(n<<31|(r=Math.round(r/1401298464324817e-60)))>>>0):(t=Math.floor(Math.log(r)/Math.LN2),r*=Math.pow(2,-t),16777216<=(r=Math.round(8388608*r))&&++t,B=0,P=(n<<31|t+127<<23|8388607&r)>>>0),n=P,e.push(n>>>0&255),e.push(n>>>8&255),e.push(n>>>16&255),e.push(n>>>24&255)}}W.prototype.push=function(e){if(!(this.h+1<this.g.length)){var t=this.g;this.g=new Uint8Array(Math.ceil(1+2*this.g.length)),this.g.set(t)}this.g[this.h++]=e},W.prototype.length=function(){return this.h},W.prototype.end=function(){var e=this.g,t=this.h;return this.h=0,V(e,0,t)},K.prototype.reset=function(){this.g.reset(),this.h=this.l=-1};var ei="function"==typeof Uint8Array;function es(e,t,n){if(null!=e)return"object"==typeof e?ei&&e instanceof Uint8Array?n(e):eo(e,t,n):t(e)}function eo(e,t,n){if(Array.isArray(e)){for(var r=Array(e.length),a=0;a<e.length;a++)r[a]=es(e[a],t,n);return Array.isArray(e)&&e.W&&el(r),r}for(a in r={},e)r[a]=es(e[a],t,n);return r}function eu(e){return"number"==typeof e?isFinite(e)?e:String(e):e}var ep={W:{value:!0,configurable:!0}};function el(e){return Array.isArray(e)&&!Object.isFrozen(e)&&Object.defineProperties(e,ep),e}function ec(e,n,r){var a=t;t=null,e||(e=a),a=this.constructor.ca,e||(e=a?[a]:[]),this.j=a?0:-1,this.m=this.g=null,this.h=e;e:{if(e=(a=this.h.length)-1,a&&!(null===(a=this.h[e])||"object"!=typeof a||Array.isArray(a)||ei&&a instanceof Uint8Array)){this.l=e-this.j,this.i=a;break e}void 0!==n&&-1<n?(this.l=Math.max(n,e+1-this.j),this.i=null):this.l=Number.MAX_VALUE}if(r)for(n=0;n<r.length;n++)(e=r[n])<this.l?(e+=this.j,(a=this.h[e])?el(a):this.h[e]=eh):(em(this),(a=this.i[e])?el(a):this.i[e]=eh)}var eh=Object.freeze(el([]));function em(e){var t=e.l+e.j;e.h[t]||(e.i=e.h[t]={})}function ed(e,t,n){return -1===t?null:(void 0===n?0:n)||t>=e.l?e.i?e.i[t]:void 0:e.h[t+e.j]}function ef(e,t){var n=void 0!==n&&n,r=ed(e,t,n);return null==r&&(r=eh),r===eh&&eb(e,t,r=el([]),n),r}function ey(e){var t=ef(e,3);if(e.m||(e.m={}),!e.m[3]){for(var n=0;n<t.length;n++)t[n]=+t[n];e.m[3]=!0}return t}function eg(e,t,n){return null==(e=ed(e,t))?n:e}function ev(e,t,n){return null==(e=null==(e=ed(e,t))?e:+e)?void 0===n?0:n:e}function eb(e,t,n,r){(void 0===r?0:r)||t>=e.l?(em(e),e.i[t]=n):e.h[t+e.j]=n}function ex(e,t,n){if(-1===n)return null;if(e.g||(e.g={}),!e.g[n]){var r=ed(e,n,!1);r&&(e.g[n]=new t(r))}return e.g[n]}function eN(e,t){e.g||(e.g={});var n=e.g[1];if(!n){var r=ef(e,1);n=[];for(var a=0;a<r.length;a++)n[a]=new t(r[a]);e.g[1]=n}return n}function eT(e,t,n){var r=void 0!==r&&r;e.g||(e.g={});var a=n?eS(n,!1):n;e.g[t]=n,eb(e,t,a,r)}function ew(e,t,n,r){var a=eN(e,n);t=t||new n,e=ef(e,1),void 0!=r?(a.splice(r,0,t),e.splice(r,0,eS(t,!1))):(a.push(t),e.push(eS(t,!1)))}function eS(e,t){if(e.g)for(var n in e.g){var r=e.g[n];if(Array.isArray(r))for(var a=0;a<r.length;a++)r[a]&&eS(r[a],t);else r&&eS(r,t)}return e.h}function e_(e,t){if(e=e.o){en(t,t.g.end());for(var n=0;n<e.length;n++)en(t,e[n])}}function eO(e,t){if(4==t.h)return!1;var n=t.m;return!function e(t){switch(t.h){case 0:if(0!=t.h)e(t);else{for(t=t.g;128&t.h[t.g];)t.g++;t.g++}break;case 1:1!=t.h?e(t):(t=t.g,t.g+=8);break;case 2:if(2!=t.h)e(t);else{var n=t.g.i();t=t.g,t.g+=n}break;case 5:5!=t.h?e(t):(t=t.g,t.g+=4);break;case 3:for(n=t.l;;){if(!X(t)){t.j=!0;break}if(4==t.h){t.l!=n&&(t.j=!0);break}e(t)}break;default:t.j=!0}}(t),t.N||(t=V(t.g.h,n,t.g.g),(n=e.o)?n.push(t):e.o=[t]),!0}function eA(e){ec.call(this,e,-1,eM)}function eE(e,t){for(;X(t);)switch(t.i){case 8:var n=t.g.i();eb(e,1,n);break;case 16:eb(e,2,n=t.g.i());break;case 29:case 26:ee(t,e.getPackedDataList());break;case 32:eb(e,4,n=H(t.g));break;default:if(!eO(e,t))return e}return e}ec.prototype.toJSON=function(){return eo(eS(this,!1),eu,L)},ec.prototype.toString=function(){return eS(this,!1).toString()},m(eA,ec),eA.prototype.getRows=function(){return ed(this,1)},eA.prototype.getCols=function(){return ed(this,2)},eA.prototype.getPackedDataList=function(){return ey(this)},eA.prototype.getLayout=function(){return eg(this,4,0)};var eM=[3];function eI(e,t){var n=void 0;return new(n||(n=Promise))(function(r,a){function i(e){try{o(t.next(e))}catch(e){a(e)}}function s(e){try{o(t.throw(e))}catch(e){a(e)}}function o(e){e.done?r(e.value):new n(function(t){t(e.value)}).then(i,s)}o((t=t.apply(e,void 0)).next())})}function ek(e){ec.call(this,e)}function eF(e,t){for(;X(t);)switch(t.i){case 8:var n=t.g.i();eb(e,1,n);break;case 21:eb(e,2,n=Q(t));break;case 26:eb(e,3,n=J(t));break;case 34:eb(e,4,n=J(t));break;default:if(!eO(e,t))return e}return e}function eC(e){ec.call(this,e,-1,eD)}m(ek,ec),m(eC,ec),eC.prototype.addClassification=function(e,t){return ew(this,e,ek,t),this};var eD=[1];function eL(e){ec.call(this,e)}function eR(e,t){for(;X(t);)switch(t.i){case 13:var n=Q(t);eb(e,1,n);break;case 21:eb(e,2,n=Q(t));break;case 29:eb(e,3,n=Q(t));break;case 37:eb(e,4,n=Q(t));break;case 45:eb(e,5,n=Q(t));break;default:if(!eO(e,t))return e}return e}function ej(e){ec.call(this,e,-1,eV)}function ez(e){e:{var t=new ej;for(e=new K(e);X(e);)if(10===e.i)ew(t,Y(e,new eL,eR),eL,void 0);else if(!eO(t,e))break e}return t}m(eL,ec),m(ej,ec);var eV=[1];function eP(e){ec.call(this,e)}function eB(e){ec.call(this,e,-1,e$)}function eU(e,t){for(;X(t);)switch(t.i){case 8:var n=H(t.g);eb(e,1,n);break;case 16:eb(e,2,n=H(t.g));break;case 29:case 26:ee(t,e.getVertexBufferList());break;case 32:case 34:n=t;var r=e.getIndexBufferList();2==n.h?Z(n,U.prototype.i,r):r.push(n.g.i());break;default:if(!eO(e,t))return e}return e}m(eP,ec),m(eB,ec),eB.prototype.getVertexType=function(){return eg(this,1,0)},eB.prototype.getPrimitiveType=function(){return eg(this,2,0)},eB.prototype.getVertexBufferList=function(){return ey(this)},eB.prototype.getIndexBufferList=function(){return ef(this,4)};var e$=[3,4];function eH(e){ec.call(this,e)}function eG(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function eW(e){return{x:ev(e,1),y:ev(e,2),z:ev(e,3),visibility:null!=ed(e,4)?ev(e,4):void 0}}function eq(e,t){this.h=e,this.g=t,this.l=0}function eK(e,t,n){return(function(e,t){var n=e.g;if(void 0===e.m){var r=eG(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),a=eG(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),i=n.createProgram();if(n.attachShader(i,r),n.attachShader(i,a),n.linkProgram(i),!n.getProgramParameter(i,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(i));r=e.m=i,n.useProgram(r),a=n.getUniformLocation(r,"sampler0"),e.j={I:n.getAttribLocation(r,"aVertex"),H:n.getAttribLocation(r,"aTex"),da:a},e.s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.enableVertexAttribArray(e.j.I),n.vertexAttribPointer(e.j.I,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.o=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.o),n.enableVertexAttribArray(e.j.H),n.vertexAttribPointer(e.j.H,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(a,0)}r=e.j,n.useProgram(e.m),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.h.bindTexture2d(t.glName),n.enableVertexAttribArray(r.I),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.vertexAttribPointer(r.I,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(r.H),n.bindBuffer(n.ARRAY_BUFFER,e.o),n.vertexAttribPointer(r.H,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(r.I),n.disableVertexAttribArray(r.H),n.bindBuffer(n.ARRAY_BUFFER,null),e.h.bindTexture2d(0)}(e,t),"function"==typeof e.g.canvas.transferToImageBitmap)?Promise.resolve(e.g.canvas.transferToImageBitmap()):n?Promise.resolve(e.g.canvas):"function"==typeof createImageBitmap?createImageBitmap(e.g.canvas):(void 0===e.i&&(e.i=document.createElement("canvas")),new Promise(function(t){e.i.height=e.g.canvas.height,e.i.width=e.g.canvas.width,e.i.getContext("2d",{}).drawImage(e.g.canvas,0,0,e.g.canvas.width,e.g.canvas.height),t(e.i)}))}function eX(e){this.g=e}m(eH,ec),eH.prototype.getMesh=function(){return ex(this,eB,1)},eH.prototype.getPoseTransformMatrix=function(){return ex(this,eA,2)};var eY=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function eQ(e,t){return t+e}function eJ(e){if(this.g=e,this.listeners={},this.j={},this.F={},this.m={},this.s={},this.G=this.o=this.R=!0,this.C=Promise.resolve(),this.P="",this.B={},this.locateFile=e&&e.locateFile||eQ,"object"==typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if("undefined"!=typeof location)t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.S=t,e.options){t=s(Object.keys(e.options));for(var n=t.next();!n.done;n=t.next()){n=n.value;var r=e.options[n].default;void 0!==r&&(this.j[n]="function"==typeof r?r():r)}}}function eZ(e,t){return eI(e,function e(){var n,r=this;return T(e,function(e){return t in r.F?e.return(r.F[t]):(n=fetch(r.locateFile(t,"")).then(function(e){return e.arrayBuffer()}),r.F[t]=n,e.return(n))})})}function e1(e){var t=(e=function(e){e:{var t=new eH;for(e=new K(e);X(e);)switch(e.i){case 10:var n=Y(e,new eB,eU);eT(t,1,n);break;case 18:eT(t,2,n=Y(e,new eA,eE));break;default:if(!eO(t,e))break e}}return t}(e)).getMesh();if(!t)return e;var n=new Float32Array(t.getVertexBufferList());t.getVertexBufferList=function(){return n};var r=new Uint32Array(t.getIndexBufferList());return t.getIndexBufferList=function(){return r},e}(u=eJ.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},u.reset=function(){return eI(this,function e(){var t=this;return T(e,function(e){t.i&&(t.i.reset(),t.m={},t.s={}),e.g=0})})},u.setOptions=function(e,t){var n=this;if(t=t||this.g.options){for(var r=[],a=[],i={},o=s(Object.keys(e)),u=o.next();!u.done;i={K:i.K,L:i.L},u=o.next()){var p=u.value;p in this.j&&this.j[p]===e[p]||(this.j[p]=e[p],void 0!==(u=t[p])&&(u.onChange&&(i.K=u.onChange,i.L=e[p],r.push(function(e){return function(){return eI(n,function t(){var n=this;return T(t,function(t){if(1==t.g)return g(t,e.K(e.L),2);!0===t.h&&(n.o=!0),t.g=0})})}}(i))),u.graphOptionXref&&(p={valueNumber:1===u.type?e[p]:0,valueBoolean:0===u.type&&e[p],valueString:2===u.type?e[p]:""},u=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),u.graphOptionXref),p),a.push(u))))}(0!==r.length||0!==a.length)&&(this.o=!0,this.A=(void 0===this.A?[]:this.A).concat(a),this.u=(void 0===this.u?[]:this.u).concat(r))}},u.initialize=function(){return eI(this,function e(){var t=this;return T(e,function(e){return 1==e.g?g(e,eI(t,function e(){var t,n,r,a,i,s,u,p,l,c,h,m=this;return T(e,function(e){var d,f,y;switch(e.g){case 1:if(t=m,!m.R)return e.return();return d=m.j,n=void 0===m.g.files?[]:"function"==typeof m.g.files?m.g.files(d):m.g.files,g(e,function(){return eI(this,function e(){return T(e,function(e){switch(e.g){case 1:return e.m=2,g(e,WebAssembly.instantiate(eY),4);case 4:e.g=3,e.m=0;break;case 2:return e.m=0,e.j=null,e.return(!1);case 3:return e.return(!0)}})})}(),2);case 2:if(r=e.h,"object"==typeof window)return f={locateFile:m.locateFile},window.createMediapipeSolutionsWasm=f,y={locateFile:m.locateFile},window.createMediapipeSolutionsPackedAssets=y,s=n.filter(function(e){return void 0!==e.data}),u=n.filter(function(e){return void 0===e.data}),p=Promise.all(s.map(function(e){var n=eZ(t,e.url);if(void 0!==e.path){var r=e.path;n=n.then(function(e){return t.overrideFile(r,e),Promise.resolve(e)})}return n})),l=Promise.all(u.map(function(e){var n,a;return void 0===e.simd||e.simd&&r||!e.simd&&!r?(n=t.locateFile(e.url,t.S),(a=document.createElement("script")).setAttribute("src",n),a.setAttribute("crossorigin","anonymous"),new Promise(function(e){a.addEventListener("load",function(){e()},!1),a.addEventListener("error",function(){e()},!1),document.body.appendChild(a)})):Promise.resolve()})).then(function(){return eI(t,function e(){var t=this;return T(e,function(e){if(1==e.g)return g(e,(0,window.createMediapipeSolutionsWasm)(window.createMediapipeSolutionsPackedAssets),2);t.h=e.h,e.g=0})})}),c=eI(t,function e(){var t=this;return T(e,function(e){return t.g.graph&&t.g.graph.url?e=g(e,eZ(t,t.g.graph.url),0):(e.g=0,e=void 0),e})}),g(e,Promise.all([l,p,c]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return a=n.filter(function(e){return void 0===e.simd||e.simd&&r||!e.simd&&!r}).map(function(e){return t.locateFile(e.url,t.S)}),importScripts.apply(null,o(a)),g(e,createMediapipeSolutionsWasm(Module),6);case 6:m.h=e.h,m.l=new OffscreenCanvas(1,1),m.h.canvas=m.l,i=m.h.GL.createContext(m.l,{antialias:!1,alpha:!1,ba:"undefined"!=typeof WebGL2RenderingContext?2:1}),m.h.GL.makeContextCurrent(i),e.g=4;break;case 7:if(m.l=document.createElement("canvas"),!(h=m.l.getContext("webgl2",{}))&&!(h=m.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),e.return();m.D=h,m.h.canvas=m.l,m.h.createContext(m.l,!0,!0,{});case 4:m.i=new m.h.SolutionWasm,m.R=!1,e.g=0}})}),2):3!=e.g?g(e,eI(t,function e(){var t,n,r,a,i,u,p,l=this;return T(e,function(e){if(1==e.g){if(l.g.graph&&l.g.graph.url&&l.P===l.g.graph.url)return e.return();if(l.o=!0,!l.g.graph||!l.g.graph.url){e.g=2;return}return l.P=l.g.graph.url,g(e,eZ(l,l.g.graph.url),3)}for(2!=e.g&&(t=e.h,l.i.loadGraph(t)),r=(n=s(Object.keys(l.B))).next();!r.done;r=n.next())a=r.value,l.i.overrideFile(a,l.B[a]);if(l.B={},l.g.listeners)for(u=(i=s(l.g.listeners)).next();!u.done;u=i.next())(function(e,t){for(var n=t.name||"$",r=[].concat(o(t.wants)),a=new e.h.StringList,i=s(t.wants),u=i.next();!u.done;u=i.next())a.push_back(u.value);i=e.h.PacketListener.implement({onResults:function(a){for(var i,o={},u=0;u<t.wants.length;++u)o[r[u]]=a.get(u);var p=e.listeners[n];p&&(e.C=(i=t.outs,eI(e,function e(){var t,n,r,a,u,p,l,c,h,m,d,f,y,v=this;return T(e,function(e){switch(e.g){case 1:if(!i)return e.return(o);for(t={},n=0,a=(r=s(Object.keys(i))).next();!a.done;a=r.next())"string"!=typeof(u=i[a.value])&&"texture"===u.type&&void 0!==o[u.stream]&&++n;1<n&&(v.G=!1),a=(p=s(Object.keys(i))).next();case 2:if(a.done){e.g=4;break}if("string"==typeof(c=i[l=a.value]))return f=t,y=l,g(e,function(e,t,n){return eI(e,function e(){var r,a=this;return T(e,function(e){return"number"==typeof n||n instanceof Uint8Array||n instanceof a.h.Uint8BlobList?e.return(n):n instanceof a.h.Texture2dDataOut?((r=a.s[t])||(r=new eq(a.h,a.D),a.s[t]=r),e.return(eK(r,n,a.G))):e.return(void 0)})})}(v,l,o[c]),14);if(h=o[c.stream],"detection_list"===c.type){if(h){for(var b=h.getRectList(),x=h.getLandmarksList(),N=h.getClassificationsList(),w=[],S=0;S<b.size();++S){var _=b.get(S);e:{var O=new eP;for(_=new K(_);X(_);)switch(_.i){case 13:var A=Q(_);eb(O,1,A);break;case 21:eb(O,2,A=Q(_));break;case 29:eb(O,3,A=Q(_));break;case 37:eb(O,4,A=Q(_));break;case 45:eb(O,5,A=Q(_));break;case 48:eb(O,6,A=H(_.g));break;default:if(!eO(O,_))break e}}O={Z:ev(O,1),$:ev(O,2),height:ev(O,3),width:ev(O,4),rotation:ev(O,5,0),X:eg(O,6,0)},_=eN(ez(x.get(S)),eL).map(eW);var E=N.get(S);for(A=new eC,E=new K(E);X(E);)if(10===E.i)A.addClassification(Y(E,new ek,eF));else if(!eO(A,E))break;O={T:O,O:_,M:eN(A,ek).map(function(e){return{index:eg(e,1,0),Y:ev(e,2),label:null!=ed(e,3)?eg(e,3,""):void 0,displayName:null!=ed(e,4)?eg(e,4,""):void 0}})},w.push(O)}b=w}else b=[];t[l]=b,e.g=7;break}if("proto_list"===c.type){if(h){for(x=0,b=Array(h.size());x<h.size();x++)b[x]=h.get(x);h.delete()}else b=[];t[l]=b,e.g=7;break}if(void 0===h){e.g=3;break}if("float_list"===c.type||"proto"===c.type){t[l]=h,e.g=7;break}if("texture"!==c.type)throw Error("Unknown output config type: '"+c.type+"'");return(m=v.s[l])||(m=new eq(v.h,v.D),v.s[l]=m),g(e,eK(m,h,v.G),13);case 13:d=e.h,t[l]=d;case 7:c.transform&&t[l]&&(t[l]=c.transform(t[l])),e.g=3;break;case 14:f[y]=e.h;case 3:a=p.next(),e.g=2;break;case 4:return e.return(t)}})})).then(function(n){n=p(n);for(var a=0;a<t.wants.length;++a){var i=o[r[a]];"object"==typeof i&&i.hasOwnProperty&&i.hasOwnProperty("delete")&&i.delete()}n&&(e.C=n)}))}}),e.i.attachMultiListener(a,i),a.delete()})(l,u.value);p=l.j,l.j={},l.setOptions(p),e.g=0})}),3):g(e,eI(t,function e(){var t,n,r,a,i,o,u=this;return T(e,function(e){switch(e.g){case 1:if(!u.o)return e.return();if(!u.u){e.g=2;break}n=(t=s(u.u)).next();case 3:if(n.done){e.g=5;break}return g(e,(0,n.value)(),4);case 4:n=t.next(),e.g=3;break;case 5:u.u=void 0;case 2:if(u.A){for(r=new u.h.GraphOptionChangeRequestList,i=(a=s(u.A)).next();!i.done;i=a.next())o=i.value,r.push_back(o);u.i.changeOptions(r),r.delete(),u.A=void 0}u.o=!1,e.g=0}})}),0)})})},u.overrideFile=function(e,t){this.i?this.i.overrideFile(e,t):this.B[e]=t},u.clearOverriddenFiles=function(){this.B={},this.i&&this.i.clearOverriddenFiles()},u.send=function(e,t){return eI(this,function n(){var r,a,i,o,u,p,l,c,h,m=this;return T(n,function(n){switch(n.g){case 1:if(!m.g.inputs)return n.return();return r=1e3*(null==t?performance.now():t),g(n,m.C,2);case 2:return g(n,m.initialize(),3);case 3:for(a=new m.h.PacketDataList,o=(i=s(Object.keys(e))).next();!o.done;o=i.next())if(u=o.value,p=m.g.inputs[u]){e:{var d=m,f=e[u];switch(p.type){case"video":var y=d.m[p.stream];if(y||(y=new eq(d.h,d.D),d.m[p.stream]=y),0===(d=y).l&&(d.l=d.h.createTexture()),"undefined"!=typeof HTMLVideoElement&&f instanceof HTMLVideoElement){var v=f.videoWidth;y=f.videoHeight}else"undefined"!=typeof HTMLImageElement&&f instanceof HTMLImageElement?(v=f.naturalWidth,y=f.naturalHeight):(v=f.width,y=f.height);y={glName:d.l,width:v,height:y},(v=d.g).canvas.width=y.width,v.canvas.height=y.height,v.activeTexture(v.TEXTURE0),d.h.bindTexture2d(d.l),v.texImage2D(v.TEXTURE_2D,0,v.RGBA,v.RGBA,v.UNSIGNED_BYTE,f),d.h.bindTexture2d(0),d=y;break e;case"detections":for((y=d.m[p.stream])||(y=new eX(d.h),d.m[p.stream]=y),(d=y).data||(d.data=new d.g.DetectionListData),d.data.reset(f.length),y=0;y<f.length;++y){v=f[y];var b=d.data,x=b.setBoundingBox,N=y,T=v.T,w=new eP;eb(w,1,T.Z),eb(w,2,T.$),eb(w,3,T.height),eb(w,4,T.width),eb(w,5,T.rotation),eb(w,6,T.X);var S=T=new et;ea(S,1,ed(w,1)),ea(S,2,ed(w,2)),ea(S,3,ed(w,3)),ea(S,4,ed(w,4)),ea(S,5,ed(w,5));var _=ed(w,6);if(null!=_&&null!=_){q(S.g,48);var O=S.g,A=_;_=0>A;var E=(A=Math.abs(A))>>>0;for(A=Math.floor((A-E)/4294967296)>>>0,_&&(A=~A>>>0,4294967295<(E=(~E>>>0)+1)&&(E=0,4294967295<++A&&(A=0))),P=E,B=A,_=P,E=B;0<E||127<_;)O.push(127&_|128),_=(_>>>7|E<<25)>>>0,E>>>=7;O.push(_)}if(e_(w,S),T=er(T),x.call(b,N,T),v.O)for(b=0;b<v.O.length;++b)S=!!(w=v.O[b]).visibility,N=(x=d.data).addNormalizedLandmark,T=y,w=Object.assign(Object.assign({},w),{visibility:S?w.visibility:0}),eb(S=new eL,1,w.x),eb(S,2,w.y),eb(S,3,w.z),w.visibility&&eb(S,4,w.visibility),ea(O=w=new et,1,ed(S,1)),ea(O,2,ed(S,2)),ea(O,3,ed(S,3)),ea(O,4,ed(S,4)),ea(O,5,ed(S,5)),e_(S,O),w=er(w),N.call(x,T,w);if(v.M)for(b=0;b<v.M.length;++b){if(N=(x=d.data).addClassification,T=y,w=v.M[b],eb(S=new ek,2,w.Y),w.index&&eb(S,1,w.index),w.label&&eb(S,3,w.label),w.displayName&&eb(S,4,w.displayName),O=w=new et,null!=(E=ed(S,1))&&null!=E){if(q(O.g,8),_=O.g,0<=E)q(_,E);else{for(A=0;9>A;A++)_.push(127&E|128),E>>=7;_.push(1)}}ea(O,2,ed(S,2)),null!=(_=ed(S,3))&&(_=F(_),q(O.g,26),q(O.g,_.length),en(O,O.g.end()),en(O,_)),null!=(_=ed(S,4))&&(_=F(_),q(O.g,34),q(O.g,_.length),en(O,O.g.end()),en(O,_)),e_(S,O),w=er(w),N.call(x,T,w)}}d=d.data;break e;default:d={}}}switch(l=d,c=p.stream,p.type){case"video":a.pushTexture2d(Object.assign(Object.assign({},l),{stream:c,timestamp:r}));break;case"detections":(h=l).stream=c,h.timestamp=r,a.pushDetectionList(h);break;default:throw Error("Unknown input config type: '"+p.type+"'")}}return m.i.send(a),g(n,m.C,4);case 4:a.delete(),n.g=0}})})},u.onResults=function(e,t){this.listeners[t||"$"]=e},_("Solution",eJ),_("OptionType",{BOOL:0,NUMBER:1,aa:2,0:"BOOL",1:"NUMBER",2:"STRING"});var e2={files:[{url:"face_mesh_solution_packed_assets_loader.js"},{simd:!0,url:"face_mesh_solution_simd_wasm_bin.js"},{simd:!1,url:"face_mesh_solution_wasm_bin.js"}],graph:{url:"face_mesh.binarypb"},listeners:[{wants:["multi_face_geometry","image_transformed","multi_face_landmarks"],outs:{image:"image_transformed",multiFaceGeometry:{type:"proto_list",stream:"multi_face_geometry",transform:function(e){return e.map(e1)}},multiFaceLandmarks:{type:"proto_list",stream:"multi_face_landmarks",transform:function(e){return e.map(function(e){return eN(ez(e),eL).map(eW)})}}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},enableFaceGeometry:{type:0,graphOptionXref:{calculatorName:"EnableFaceGeometryConstant",calculatorType:"ConstantSidePacketCalculator",fieldName:"bool_value"}},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},maxNumFaces:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorNumFaces",fieldName:"int_value"}},refineLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorRefineLandmarks",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facelandmarkfrontgpu__facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"facelandmarkfrontgpu__facelandmarkgpu__ThresholdingCalculator",fieldName:"threshold"}},cameraNear:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"near"}},cameraFar:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"far"}},cameraVerticalFovDegrees:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"vertical_fov_degrees"}}}},e3=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],e4=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],e0=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],e6=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],e5=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],e7=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],e9=[].concat(o(e3),o(e4),o(e0),o(e6),o(e5),o(e7));function e8(e){e=e||{},e=Object.assign(Object.assign({},e2),e),this.g=new eJ(e)}(u=e8.prototype).close=function(){return this.g.close(),Promise.resolve()},u.onResults=function(e){this.g.onResults(e)},u.initialize=function(){return eI(this,function e(){var t=this;return T(e,function(e){return g(e,t.g.initialize(),0)})})},u.reset=function(){this.g.reset()},u.send=function(e){return eI(this,function t(){var n=this;return T(t,function(t){return g(t,n.g.send(e),0)})})},u.setOptions=function(e){this.g.setOptions(e)},_("FACE_GEOMETRY",{Layout:{COLUMN_MAJOR:0,ROW_MAJOR:1,0:"COLUMN_MAJOR",1:"ROW_MAJOR"},PrimitiveType:{TRIANGLE:0,0:"TRIANGLE"},VertexType:{VERTEX_PT:0,0:"VERTEX_PT"},DEFAULT_CAMERA_PARAMS:{verticalFovDegrees:63,near:1,far:1e4}}),_("FaceMesh",e8),_("FACEMESH_LIPS",e3),_("FACEMESH_LEFT_EYE",e4),_("FACEMESH_LEFT_EYEBROW",e0),_("FACEMESH_LEFT_IRIS",[[474,475],[475,476],[476,477],[477,474]]),_("FACEMESH_RIGHT_EYE",e6),_("FACEMESH_RIGHT_EYEBROW",e5),_("FACEMESH_RIGHT_IRIS",[[469,470],[470,471],[471,472],[472,469]]),_("FACEMESH_FACE_OVAL",e7),_("FACEMESH_CONTOURS",e9),_("FACEMESH_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),_("matrixDataToMatrix",function(e){for(var t=e.getCols(),n=e.getRows(),r=e.getPackedDataList(),a=[],i=0;i<n;i++)a.push(Array(t));for(i=0;i<n;i++)for(var s=0;s<t;s++){var o=1===e.getLayout()?i*t+s:s*n+i;a[i][s]=r[o]}return a}),_("VERSION","0.4.1633559619")}).call(this)},5107:function(e,t,n){"use strict";n.r(t),n.d(t,{SupportedModels:function(){return tG},createDetector:function(){return t7},util:function(){return t9}});var r={};n.r(r),n.d(r,{json:function(){return D}});var a={};n.r(a),n.d(a,{json:function(){return L}});var i={};n.r(i),n.d(i,{json:function(){return R}});var s={};n.r(s),n.d(s,{json:function(){return j}});var o={};n.r(o),n.d(o,{json:function(){return z}});var u={};n.r(u),n.d(u,{json:function(){return V}});var p={};n.r(p),n.d(p,{json:function(){return P}});var l={};n.r(l),n.d(l,{json:function(){return B}});var c={};n.r(c),n.d(c,{json:function(){return U}});var h={};n.r(h),n.d(h,{json:function(){return $}});var m={};n.r(m),n.d(m,{json:function(){return H}});var d={};n.r(d),n.d(d,{json:function(){return G}});var f={};n.r(f),n.d(f,{json:function(){return W}});var y={};n.r(y),n.d(y,{json:function(){return q}});var g={};n.r(g),n.d(g,{json:function(){return K}});var v={};n.r(v),n.d(v,{json:function(){return X}});var b={};n.r(b),n.d(b,{json:function(){return Y}});var x={};n.r(x),n.d(x,{json:function(){return Q}});var N={};n.r(N),n.d(N,{json:function(){return J}});var T={};n.r(T),n.d(T,{OP_SCOPE_SUFFIX:function(){return ey.zvA},abs:function(){return ey.WnP},acos:function(){return ey.Khb},acosh:function(){return ey.__u},add:function(){return ey.IHx},addN:function(){return ey.QBD},all:function(){return ey.$6P},any:function(){return ey.YjB},argMax:function(){return ey.NqF},argMin:function(){return ey.vHJ},asin:function(){return ey.ZRM},asinh:function(){return ey.VfV},atan:function(){return ey.z4N},atan2:function(){return ey.fvJ},atanh:function(){return ey.C80},avgPool:function(){return ey.wS1},avgPool3d:function(){return ey.uR5},basicLSTMCell:function(){return ey.zEQ},batchNorm:function(){return ey.tgs},batchNorm2d:function(){return ey.Dxk},batchNorm3d:function(){return ey.JY5},batchNorm4d:function(){return ey.p3b},batchToSpaceND:function(){return ey.E4h},bincount:function(){return ey.yE8},bitwiseAnd:function(){return ey.ycw},booleanMaskAsync:function(){return ey.anm},broadcastArgs:function(){return ey.XsQ},broadcastTo:function(){return ey.UFq},buffer:function(){return ey.f3b},cast:function(){return ey.pju},ceil:function(){return ey.mDi},clipByValue:function(){return ey.iUl},clone:function(){return ey.d9v},complex:function(){return ey.PYB},concat:function(){return ey.zoF},concat1d:function(){return ey.gME},concat2d:function(){return ey.Izb},concat3d:function(){return ey.MNy},concat4d:function(){return ey.ZaL},conv1d:function(){return ey.PAt},conv2d:function(){return ey.Tek},conv2dTranspose:function(){return ey.bc},conv3d:function(){return ey.pdZ},conv3dTranspose:function(){return ey.$QV},cos:function(){return ey.mCk},cosh:function(){return ey.f9Y},cosineWindow:function(){return ey.mew},cumprod:function(){return ey.$Gn},cumsum:function(){return ey.zbp},denseBincount:function(){return ey.ppE},depthToSpace:function(){return ey.nTT},depthwiseConv2d:function(){return ey.B10},diag:function(){return ey.Ka3},dilation2d:function(){return ey.WmZ},div:function(){return ey.hiC},divNoNan:function(){return ey.NTj},dot:function(){return ey.AKD},dropout:function(){return ey.rvX},einsum:function(){return ey.WYO},elu:function(){return ey.pyx},enclosingPowerOfTwo:function(){return ey.GRh},ensureShape:function(){return ey.EDe},equal:function(){return ey.DgJ},erf:function(){return ey.qNN},euclideanNorm:function(){return ey.d2q},exp:function(){return ey.Qqt},expandDims:function(){return ey.dt4},expm1:function(){return ey.t$B},eye:function(){return ey.iyy},fft:function(){return ey.kp_},fill:function(){return ey.hlL},floor:function(){return ey.GWj},floorDiv:function(){return ey.qPi},fused:function(){return ey.imm},gather:function(){return ey.Iqj},gatherND:function(){return ey.dbB},greater:function(){return ey.pjt},greaterEqual:function(){return ey.brS},ifft:function(){return ey.Sxn},imag:function(){return ey.asL},image:function(){return ey.BHj},inTopKAsync:function(){return ey.V3u},irfft:function(){return ey.wx0},isFinite:function(){return ey.xVT},isInf:function(){return ey.UWc},isNaN:function(){return ey.i2d},leakyRelu:function(){return ey.hi7},less:function(){return ey.d9m},lessEqual:function(){return ey.zN1},linalg:function(){return ey.$r2},linspace:function(){return ey.SX3},localResponseNormalization:function(){return ey.G9k},log:function(){return ey.cM7},log1p:function(){return ey.Krr},logSigmoid:function(){return ey.e_t},logSoftmax:function(){return ey.CmS},logSumExp:function(){return ey.l_t},logicalAnd:function(){return ey.HvI},logicalNot:function(){return ey.hJK},logicalOr:function(){return ey.K5V},logicalXor:function(){return ey.egP},losses:function(){return ey.MB5},lowerBound:function(){return ey.eab},matMul:function(){return ey.OI3},max:function(){return ey.Fp7},maxPool:function(){return ey._sB},maxPool3d:function(){return ey.YQQ},maxPoolWithArgmax:function(){return ey.Ip$},maximum:function(){return ey.gWQ},mean:function(){return ey.J69},meshgrid:function(){return ey.ry_},min:function(){return ey.VV$},minimum:function(){return ey.LTh},mirrorPad:function(){return ey.VdP},mod:function(){return ey.wQq},moments:function(){return ey.Gi7},movingAverage:function(){return ey.p_},mul:function(){return ey.dC7},multiRNNCell:function(){return ey.rq4},multinomial:function(){return ey.SJ_},neg:function(){return ey.W76},norm:function(){return ey.KOy},notEqual:function(){return ey.Quu},oneHot:function(){return ey.lfX},ones:function(){return ey.iUs},onesLike:function(){return ey.JpU},op:function(){return ey.op},outerProduct:function(){return ey.N2O},pad:function(){return ey.vku},pad1d:function(){return ey.pNR},pad2d:function(){return ey.koy},pad3d:function(){return ey.t1L},pad4d:function(){return ey.lGY},pool:function(){return ey.d_R},pow:function(){return ey.sQ3},prelu:function(){return ey.AL3},print:function(){return ey.S0v},prod:function(){return ey.WVs},raggedGather:function(){return ey.$gW},raggedRange:function(){return ey.VT$},raggedTensorToTensor:function(){return ey.N89},rand:function(){return ey.TN_},randomGamma:function(){return ey.wzB},randomNormal:function(){return ey.nGf},randomStandardNormal:function(){return ey.ruB},randomUniform:function(){return ey.LGj},randomUniformInt:function(){return ey.pe5},range:function(){return ey.w6H},real:function(){return ey.kwC},reciprocal:function(){return ey.M25},relu:function(){return ey.UYe},relu6:function(){return ey.btT},reshape:function(){return ey.XLQ},reverse:function(){return ey.GYS},reverse1d:function(){return ey.SDf},reverse2d:function(){return ey.diP},reverse3d:function(){return ey.sx7},reverse4d:function(){return ey.mG2},rfft:function(){return ey.QEs},round:function(){return ey.NMM},rsqrt:function(){return ey.bp0},scalar:function(){return ey.iD$},scatterND:function(){return ey.snQ},searchSorted:function(){return ey.zcT},selu:function(){return ey.U8D},separableConv2d:function(){return ey.U_I},setdiff1dAsync:function(){return ey.ODp},sigmoid:function(){return ey.XD2},sign:function(){return ey.Xxe},signal:function(){return ey.tdS},sin:function(){return ey.O$l},sinh:function(){return ey.R_K},slice:function(){return ey.tPi},slice1d:function(){return ey.jZU},slice2d:function(){return ey.SmN},slice3d:function(){return ey.CnO},slice4d:function(){return ey.p0P},softmax:function(){return ey.XAC},softplus:function(){return ey.Wvh},spaceToBatchND:function(){return ey.fBT},sparse:function(){return ey.rVs},sparseToDense:function(){return ey.ers},spectral:function(){return ey.uN7},split:function(){return ey.Vl2},sqrt:function(){return ey._b3},square:function(){return ey.h62},squaredDifference:function(){return ey.$i},squeeze:function(){return ey.L9e},stack:function(){return ey.knu},step:function(){return ey.Nbs},stridedSlice:function(){return ey.NXj},string:function(){return ey.Z_8},sub:function(){return ey.luU},sum:function(){return ey.Smz},tan:function(){return ey.ORZ},tanh:function(){return ey.AEp},tensor:function(){return ey.XeE},tensor1d:function(){return ey.RRF},tensor2d:function(){return ey.odF},tensor3d:function(){return ey.wOQ},tensor4d:function(){return ey.yXz},tensor5d:function(){return ey.Bfx},tensor6d:function(){return ey.xZs},tensorScatterUpdate:function(){return ey.Pg0},tile:function(){return ey.Gg6},topk:function(){return ey.hg7},transpose:function(){return ey.p4s},truncatedNormal:function(){return ey.Xu6},unique:function(){return ey.Two},unsortedSegmentSum:function(){return ey.pUJ},unstack:function(){return ey.HHK},upperBound:function(){return ey.GaM},variable:function(){return ey.VD$},where:function(){return ey.arb},whereAsync:function(){return ey.itS},zeros:function(){return ey.lls},zerosLike:function(){return ey.P84}});var w=n(9960),S=n(9094);(0,S.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),(tx=tw||(tw={}))[tx.DT_INVALID=0]="DT_INVALID",tx[tx.DT_FLOAT=1]="DT_FLOAT",tx[tx.DT_DOUBLE=2]="DT_DOUBLE",tx[tx.DT_INT32=3]="DT_INT32",tx[tx.DT_UINT8=4]="DT_UINT8",tx[tx.DT_INT16=5]="DT_INT16",tx[tx.DT_INT8=6]="DT_INT8",tx[tx.DT_STRING=7]="DT_STRING",tx[tx.DT_COMPLEX64=8]="DT_COMPLEX64",tx[tx.DT_INT64=9]="DT_INT64",tx[tx.DT_BOOL=10]="DT_BOOL",tx[tx.DT_QINT8=11]="DT_QINT8",tx[tx.DT_QUINT8=12]="DT_QUINT8",tx[tx.DT_QINT32=13]="DT_QINT32",tx[tx.DT_BFLOAT16=14]="DT_BFLOAT16",tx[tx.DT_QINT16=15]="DT_QINT16",tx[tx.DT_QUINT16=16]="DT_QUINT16",tx[tx.DT_UINT16=17]="DT_UINT16",tx[tx.DT_COMPLEX128=18]="DT_COMPLEX128",tx[tx.DT_HALF=19]="DT_HALF",tx[tx.DT_RESOURCE=20]="DT_RESOURCE",tx[tx.DT_VARIANT=21]="DT_VARIANT",tx[tx.DT_UINT32=22]="DT_UINT32",tx[tx.DT_UINT64=23]="DT_UINT64",tx[tx.DT_FLOAT_REF=101]="DT_FLOAT_REF",tx[tx.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",tx[tx.DT_INT32_REF=103]="DT_INT32_REF",tx[tx.DT_UINT8_REF=104]="DT_UINT8_REF",tx[tx.DT_INT16_REF=105]="DT_INT16_REF",tx[tx.DT_INT8_REF=106]="DT_INT8_REF",tx[tx.DT_STRING_REF=107]="DT_STRING_REF",tx[tx.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",tx[tx.DT_INT64_REF=109]="DT_INT64_REF",tx[tx.DT_BOOL_REF=110]="DT_BOOL_REF",tx[tx.DT_QINT8_REF=111]="DT_QINT8_REF",tx[tx.DT_QUINT8_REF=112]="DT_QUINT8_REF",tx[tx.DT_QINT32_REF=113]="DT_QINT32_REF",tx[tx.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",tx[tx.DT_QINT16_REF=115]="DT_QINT16_REF",tx[tx.DT_QUINT16_REF=116]="DT_QUINT16_REF",tx[tx.DT_UINT16_REF=117]="DT_UINT16_REF",tx[tx.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",tx[tx.DT_HALF_REF=119]="DT_HALF_REF",tx[tx.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",tx[tx.DT_VARIANT_REF=121]="DT_VARIANT_REF",tx[tx.DT_UINT32_REF=122]="DT_UINT32_REF",tx[tx.DT_UINT64_REF=123]="DT_UINT64_REF",(tT=(tN=tS||(tS={})).CheckpointFormatVersion||(tN.CheckpointFormatVersion={}))[tT.LEGACY=0]="LEGACY",tT[tT.V1=1]="V1",tT[tT.V2=2]="V2";let _={};function O(e,t,n,r,a){let i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){let e=i.inputIndexStart,s=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===i.type)return A(t.inputNames[o],n,r,a);if("tensors"===i.type){let i=t.inputs.slice(e,s);return t.inputNames.slice(e,s).filter((e,t)=>{var n;return(null===(n=i[t])||void 0===n?void 0:n.op)!=="NoOp"}).map(e=>A(e,n,r,a))}let u=A(t.inputNames[o],n,r,a),p=u.dataSync();return"number"===i.type?p[0]:S.util.toNestedArray(u.shape,p)}let s=t.attrParams[e];return s&&s.value}function A(e,t,n,r){let[a,i]=k(e,n);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let s=n.currentContextIds.find(e=>!!t[I(a,e)]);return void 0!==s?t[I(a,s)][i]:void 0}function E(e,t,n){return t[I(e,n.currentContextId)]}function M(e,t){let[n,r,a]=k(e,t);return[I(n,t&&t.currentContextId),r,a]}function I(e,t){return t?`${e}-${t}`:e}function k(e,t){let n;if(""===e)return["",0,void 0];let r=null!=t&&null!=t.parseNodeNameCache;if(r){let n=t.parseNodeNameCache.get(e);if(null!=n)return n}let a=e.split(":");if(1===a.length)n=[e,0,void 0];else{let e=a[0],t=3===a.length?a[1]:void 0;n=[e,Number(a[a.length-1]),t]}return r&&t.parseNodeNameCache.set(e,n),n}function F(e,t,n){let r=O("pad",e,t,n);if("explicit"===r){r=O("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function C(e){return e.kept?e:(0,S.clone)(e)}let D=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],L=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],R=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],j=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],z=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],V=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],B=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],U=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],$=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],H=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],G=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],W=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],q=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],K=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],X=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Y=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Q=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],J=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Z=n(6434).Buffer;class ee{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[r,a,i,s,o,u,p,l,c,h,m,d,f,y,g,v,b,x,N].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],i=[],s=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&i.push(e[t.name]),e),{}),o=[],u=[],p={},l={};null!=t&&(p=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));let c=Object.keys(s);c.forEach(e=>{let t=s[e];t.inputNames.forEach((e,n)=>{let[r,,a]=M(e),i=s[r];if(null!=i.outputs){let e=i.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(i),i.children.push(t)})}),0===Object.keys(l).length?c.forEach(e=>{let t=s[e];0===t.children.length&&u.push(t)}):Object.keys(l).forEach(e=>{let[t]=M(e),n=s[t];null!=n&&(n.signatureKey=l[e],u.push(n))}),Object.keys(p).length>0?Object.keys(p).forEach(e=>{let[t]=M(e),n=s[t];n&&(n.signatureKey=p[e],o.push(n))}):o=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));let m={nodes:s,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:h};return i.length>0&&(m.initNodes=i),m}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=_[e.op]||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{let r;let a=n.type;switch(n.type){case"string":void 0===(r=en(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=en(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":void 0===(r=eh(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=eh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":void 0===(r=ea(e.attr,n.tfName,n.defaultValue||0))&&n.tfDeprecatedName&&(r=ea(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":void 0===(r=ec(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=ec(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":void 0===(r=er(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=er(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":void 0===(r=ed(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=ed(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":void 0===(r=el(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=el(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":void 0===(r=em(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=em(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":void 0===(r=eo(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=eo(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":void 0===(r=eu(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=eu(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":void 0===(r=es(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=es(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));let a=[],i=[];e.signature.inputArg.forEach(e=>{let[t]=M(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ei(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}),Object.keys(r).forEach(e=>{let t=r[e];t.inputNames.forEach((e,n)=>{let[a,,i]=M(e),s=r[a];if(null!=s.outputs){let e=s.outputs.indexOf(i);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)})});let s=e.ret;e.signature.outputArg.forEach(e=>{let[t,n]=M(s[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,i.push(a))});let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:i,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function et(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=(0,S.env)().global;if(void 0!==t.atob)return t.atob(e);if(void 0!==Z)return new Z(e,"base64").toString();throw Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function en(e,t,n,r=!1){let a=e[t];return null!=a?et(a.s,r):n}function er(e,t,n){let r=e[t];return r?r.b:n}function ea(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function ei(e){switch("string"==typeof e&&(e=tw[e]),e){case tw.DT_FLOAT:case tw.DT_HALF:return"float32";case tw.DT_INT32:case tw.DT_INT64:case tw.DT_INT8:case tw.DT_UINT8:return"int32";case tw.DT_BOOL:return"bool";case tw.DT_DOUBLE:return"float32";case tw.DT_STRING:return"string";case tw.DT_COMPLEX64:case tw.DT_COMPLEX128:return"complex64";default:return null}}function es(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function eo(e,t,n){let r=e[t];return r&&r.type?ei(r.type):n}function eu(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>ei(e)):n}function ep(e){return e.unknownRank?void 0:null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function el(e,t,n){let r=e[t];return r&&r.shape?ep(r.shape):n}function ec(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function eh(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>et(e,r)):n}function em(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>ep(e)):n}function ed(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class ef{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return A(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return A(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ea(this.node.rawAttrs,e,t);if(null!=n.s)return en(this.node.rawAttrs,e,t);if(null!=n.b)return er(this.node.rawAttrs,e,t);if(null!=n.shape)return el(this.node.rawAttrs,e,t);if(null!=n.type)return eo(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return ec(this.node.rawAttrs,e,t);if(null!=n.list.s)return eh(this.node.rawAttrs,e,t);if(null!=n.list.shape)return em(this.node.rawAttrs,e,t);if(null!=n.list.b)return ed(this.node.rawAttrs,e,t);if(null!=n.list.type)return eu(this.node.rawAttrs,e,t)}return t}}var ey=n(570);let eg=(e,t,n,r=T)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(O("a",e,t,n),O("b",e,t,n))];case"AddN":return[r.addN(O("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(O("a",e,t,n),O("b",e,t,n))];case"Mul":return[r.mul(O("a",e,t,n),O("b",e,t,n))];case"RealDiv":case"Div":return[r.div(O("a",e,t,n),O("b",e,t,n))];case"DivNoNan":return[r.divNoNan(O("a",e,t,n),O("b",e,t,n))];case"FloorDiv":return[r.floorDiv(O("a",e,t,n),O("b",e,t,n))];case"Sub":return[r.sub(O("a",e,t,n),O("b",e,t,n))];case"Minimum":return[r.minimum(O("a",e,t,n),O("b",e,t,n))];case"Maximum":return[r.maximum(O("a",e,t,n),O("b",e,t,n))];case"Pow":return[r.pow(O("a",e,t,n),O("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(O("a",e,t,n),O("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},ev=(e,t,n,r=T)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(O("x",e,t,n))];case"Acos":return[r.acos(O("x",e,t,n))];case"Acosh":return[r.acosh(O("x",e,t,n))];case"Asin":return[r.asin(O("x",e,t,n))];case"Asinh":return[r.asinh(O("x",e,t,n))];case"Atan":return[r.atan(O("x",e,t,n))];case"Atan2":return[r.atan2(O("x",e,t,n),O("y",e,t,n))];case"Atanh":return[r.atanh(O("x",e,t,n))];case"Ceil":return[r.ceil(O("x",e,t,n))];case"Complex":return[r.complex(O("real",e,t,n),O("imag",e,t,n))];case"Cos":return[r.cos(O("x",e,t,n))];case"Cosh":return[r.cosh(O("x",e,t,n))];case"Elu":return[r.elu(O("x",e,t,n))];case"Erf":return[r.erf(O("x",e,t,n))];case"Exp":return[r.exp(O("x",e,t,n))];case"Expm1":return[r.expm1(O("x",e,t,n))];case"Floor":return[r.floor(O("x",e,t,n))];case"Log":return[r.log(O("x",e,t,n))];case"Log1p":return[r.log1p(O("x",e,t,n))];case"Imag":return[r.imag(O("x",e,t,n))];case"Neg":return[r.neg(O("x",e,t,n))];case"Reciprocal":return[r.reciprocal(O("x",e,t,n))];case"Real":return[r.real(O("x",e,t,n))];case"Relu":return[r.relu(O("x",e,t,n))];case"Round":return[r.round(O("x",e,t,n))];case"Selu":return[r.selu(O("x",e,t,n))];case"Sigmoid":return[r.sigmoid(O("x",e,t,n))];case"Sin":return[r.sin(O("x",e,t,n))];case"Sign":return[r.sign(O("x",e,t,n))];case"Sinh":return[r.sinh(O("x",e,t,n))];case"Softplus":return[r.softplus(O("x",e,t,n))];case"Sqrt":return[r.sqrt(O("x",e,t,n))];case"Square":return[r.square(O("x",e,t,n))];case"Tanh":return[r.tanh(O("x",e,t,n))];case"Tan":return[r.tan(O("x",e,t,n))];case"ClipByValue":return[r.clipByValue(O("x",e,t,n),O("clipValueMin",e,t,n),O("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(O("x",e,t,n))];case"Rsqrt":return[r.rsqrt(A(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(O("x",e,t,n),O("alpha",e,t,n))];case"Prelu":return[r.prelu(O("x",e,t,n),O("alpha",e,t,n))];case"IsNan":return[r.isNaN(A(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(A(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(A(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function eb(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){S.util.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let a=e[r],i=t[r];S.util.assert(a<0||i<0||a===i,()=>n+` Shapes ${e} and ${t} must match`)}}}function ex(e){return!("number"==typeof e||e.some(e=>e<0))}function eN(e,t,n){let r=eT(e,n),a=!ex(r);if(a&&0===t.length)throw Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(e=>{r=eT(e.shape,r)}),!ex(r))throw Error(`Non-fully-defined elementShape: ${r}`);return r}function eT(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],i=t[r];if(a>=0&&i>=0&&a!==i)throw Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:i}return n}class ew{constructor(e,t,n,r,a,i,s){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=i,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=(0,S.scalar)(0),(0,S.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),eb(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,S.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,S.tensor)([],[0].concat(this.elementShape));let n=this.readMany(e);return eb(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,S.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,S.tensor)([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return eb(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,S.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,S.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(e=>n+=e);if(n!==t.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,i=[];(0,S.tidy)(()=>{t=(0,S.reshape)(t,[1,n,a]);for(let n=0;n<e.length;++n){let s=[0,0===n?0:r[n-1],0],o=[1,e[n],a];i[n]=(0,S.reshape)((0,S.slice)(t,s,o),this.elementShape)}return i});let s=[];for(let t=0;t<e.length;t++)s[t]=t;this.writeMany(s,i)}}class eS{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);eb(t,e.shape,"TensorList shape mismatch: "),(0,S.keep)(e)}),this.idTensor=(0,S.scalar)(0),this.maxNumElements=r,(0,S.keep)(this.idTensor)}copy(){return new eS([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);eb(e,this.elementShape,"TensorList shape mismatch: ");let r=eN(this.elementShape,this.tensors,e);return(0,S.tidy)(()=>{let e=this.tensors.map(e=>(0,S.reshape)(e,r));return(0,S.stack)(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw Error("Trying to pop from an empty list.");let n=eN(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,eb(r.shape,e,"TensorList shape mismatch: "),(0,S.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(eb(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw Error("Trying to push element into a full list.");(0,S.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new eS([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw Error(`element at index ${e} is null.`);eb(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=eN(this.elementShape,this.tensors,t);return(0,S.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);eb(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,S.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);eb(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=eN(this.elementShape,this.tensors,n);return 0===e.length?(0,S.tensor)([],[0].concat(r)):(0,S.tidy)(()=>{let t=e.map(e=>(0,S.reshape)(this.tensors[e],r));return(0,S.stack)(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);eb(this.elementShape,t,"TensorList shape mismatch: ");let n=eN(this.elementShape,this.tensors,t);return 0===this.size()?(0,S.tensor)([],[0].concat(n)):(0,S.tidy)(()=>{let e=this.tensors.map(e=>(0,S.reshape)(e,n));return(0,S.concat)(e,0)})}}let e_=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=O("thenBranch",e,t,n),a=O("elseBranch",e,t,n),i=O("cond",e,t,n),s=O("args",e,t,n);if((await i.data())[0])return n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap);return n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=O("body",e,t,n),a=O("cond",e,t,n),i=O("args",e,t,n),s=await n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),o=i.map(e=>e.id),u=await s[0].data();s.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let p=i;for(;u[0];){let e=p,t=(p=await n.functionMap[r].executeFunctionAsync(p,n.tensorArrayMap,n.tensorListMap)).map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});let i=await n.functionMap[a].executeFunctionAsync(p,n.tensorArrayMap,n.tensorListMap);u=await i[0].data(),i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return p}case"LoopCond":return[C(O("pred",e,t,n))];case"Switch":{let r=O("pred",e,t,n),a=O("data",e,t,n);return a.kept||(a=C(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find(e=>void 0!==A(e,t,n));if(r)return[C(A(r,t,n))];return}case"Enter":{let r=O("frameName",e,t,n),a=O("tensor",e,t,n);return n.enterFrame(r),[C(a)]}case"Exit":{let r=O("tensor",e,t,n);return n.exitFrame(),[C(r)]}case"NextIteration":{let r=O("tensor",e,t,n);return n.nextIteration(),[C(r)]}case"TensorArrayV3":{let r=O("size",e,t,n),a=O("dtype",e,t,n),i=O("elementShape",e,t,n),s=O("dynamicSize",e,t,n),o=O("clearAfterRead",e,t,n),u=O("identicalElementShapes",e,t,n),p=new ew(O("name",e,t,n),a,r,i,u,s,o);return n.addTensorArray(p),[p.idTensor,(0,S.scalar)(1)]}case"TensorArrayWriteV3":{let r=O("tensorArrayId",e,t,n),a=O("index",e,t,n),i=O("tensor",e,t,n),s=n.getTensorArray(r.id);return s.write(a,i),[s.idTensor]}case"TensorArrayReadV3":{let r=O("tensorArrayId",e,t,n),a=O("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=O("tensorArrayId",e,t,n),a=O("indices",e,t,n),i=O("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,i)]}case"TensorArrayScatterV3":{let r=O("tensorArrayId",e,t,n),a=O("indices",e,t,n),i=O("tensor",e,t,n),s=n.getTensorArray(r.id);return s.scatter(a,i),[s.idTensor]}case"TensorArrayConcatV3":{let r=O("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),i=O("dtype",e,t,n);return[a.concat(i)]}case"TensorArraySplitV3":{let r=O("tensorArrayId",e,t,n),a=O("tensor",e,t,n),i=O("lengths",e,t,n),s=n.getTensorArray(r.id);return s.split(i,a),[s.idTensor]}case"TensorArraySizeV3":{let r=O("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[(0,S.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{let r=O("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=O("tensorListId",e,t,n),a=O("index",e,t,n),i=O("tensor",e,t,n),s=n.getTensorList(r.id);return s.setItem(a,i),[s.idTensor]}case"TensorListGetItem":{let r=O("tensorListId",e,t,n),a=O("index",e,t,n),i=O("elementShape",e,t,n),s=O("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,i,s)]}case"TensorListScatterV2":case"TensorListScatter":{let r=O("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw Error(`Max index must be < array size (${a}  vs. ${r})`);let i=new eS([],n,e.dtype,r),s=(0,S.unstack)(e,0);return t.forEach((e,t)=>{i.setItem(e,s[t])}),i}(O("tensor",e,t,n),r,O("elementShape",e,t,n),O("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=O("elementShape",e,t,n),a=O("elementDType",e,t,n),i=O("TensorListReserve"===e.op?"numElements":"maxNumElements",e,t,n),s=new eS([],r,a,"TensorListReserve"===e.op?-1:i);return n.addTensorList(s),[s.idTensor]}case"TensorListGather":{let r=O("tensorListId",e,t,n),a=O("indices",e,t,n),i=O("elementShape",e,t,n),s=O("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,s,i)]}case"TensorListStack":{let r=O("tensorListId",e,t,n),a=O("elementShape",e,t,n),i=O("elementDType",e,t,n),s=O("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,i,s)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);return eb(e.shape.slice(1),t,"TensorList shape mismatch: "),new eS((0,S.unstack)(e),t,r)}(O("tensor",e,t,n),O("elementShape",e,t,n),O("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=O("tensorListId",e,t,n),a=n.getTensorList(r.id),i=O("dtype",e,t,n),s=O("elementShape",e,t,n);return[a.concat(i,s)]}case"TensorListPushBack":{let r=O("tensorListId",e,t,n),a=O("tensor",e,t,n),i=n.getTensorList(r.id);return i.pushBack(a),[i.idTensor]}case"TensorListPopBack":{let r=O("tensorListId",e,t,n),a=O("elementShape",e,t,n),i=O("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,i)]}case"TensorListSplit":{let r=O("tensor",e,t,n),a=O("elementShape",e,t,n),i=function(e,t,n){let r=0,a=t.map(e=>r+=e);if(r!==e.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let i=eT(e.shape.slice(1),n),s=0===r?0:e.size/r,o=(0,S.tidy)(()=>{let n=[];e=(0,S.reshape)(e,[1,r,s]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],u=[1,t[r],s];n[r]=(0,S.reshape)((0,S.slice)(e,o,u),i)}return e.dispose(),n}),u=new eS([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,O("lengths",e,t,n),a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let r=O("tensorListId",e,t,n),a=n.getTensorList(r.id);return[(0,S.scalar)(a.size(),"int32")]}case"TensorListResize":{let r=O("tensorListId",e,t,n),a=O("size",e,t,n),i=n.getTensorList(r.id).resize(a);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function eO(e,t,n){let[r,a]=O("fusedOps",e,t,n),i="biasadd"===r,s="prelu"===a,o=O("numArgs",e,t,n);if(i){if(s&&2!==o)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&i&&1!==o)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if("fusedbatchnorm"===r)throw Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=O("strides",e,t,n),p=F(e,t,n),l=O("dataFormat",e,t,n).toUpperCase(),c=O("dilations",e,t,n),[h,m]=O("args",e,t,n);return i||(m=h,h=void 0),{stride:u,pad:p,dataFormat:l,dilations:c,biasArg:h,preluArg:m,activationFunc:a,leakyreluAlpha:O("leakyreluAlpha",e,t,n)}}let eA=(e,t,n,r=T)=>{switch(e.op){case"Conv1D":{let a=O("stride",e,t,n),i=O("pad",e,t,n),s=O("dataFormat",e,t,n).toUpperCase(),o=O("dilation",e,t,n);return[r.conv1d(O("x",e,t,n),O("filter",e,t,n),a,i,s,o)]}case"Conv2D":{let a=O("strides",e,t,n),i=F(e,t,n),s=O("dataFormat",e,t,n).toUpperCase(),o=O("dilations",e,t,n);return[r.conv2d(O("x",e,t,n),O("filter",e,t,n),[a[1],a[2]],i,s,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:i,dataFormat:s,dilations:o,biasArg:u,preluArg:p,activationFunc:l,leakyreluAlpha:c}=eO(e,t,n);return[r.fused.conv2d({x:O("x",e,t,n),filter:O("filter",e,t,n),strides:[a[1],a[2]],pad:i,dataFormat:s,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:p,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:i,dataFormat:s,dilations:o,biasArg:u,preluArg:p,activationFunc:l,leakyreluAlpha:c}=eO(e,t,n);return[r.fused.depthwiseConv2d({x:O("x",e,t,n),filter:O("filter",e,t,n),strides:[a[1],a[2]],pad:i,dataFormat:s,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:p,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=O("outputShape",e,t,n),i=O("strides",e,t,n),s=F(e,t,n);return[r.conv2dTranspose(O("x",e,t,n),O("filter",e,t,n),a,[i[1],i[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=O("strides",e,t,n),i=F(e,t,n),s=O("dilations",e,t,n),o=O("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(O("input",e,t,n),O("filter",e,t,n),[a[1],a[2]],i,o,[s[1],s[2]])]}case"Conv3D":{let a=O("strides",e,t,n),i=O("pad",e,t,n),s=O("dataFormat",e,t,n).toUpperCase(),o=O("dilations",e,t,n);return[r.conv3d(O("x",e,t,n),O("filter",e,t,n),[a[1],a[2],a[3]],i,s,[o[1],o[2],o[3]])]}case"AvgPool":{let a=O("strides",e,t,n),i=O("pad",e,t,n),s=O("kernelSize",e,t,n);return[r.avgPool(O("x",e,t,n),[s[1],s[2]],[a[1],a[2]],i)]}case"MaxPool":{let a=O("strides",e,t,n),i=O("pad",e,t,n),s=O("kernelSize",e,t,n);return[r.maxPool(O("x",e,t,n),[s[1],s[2]],[a[1],a[2]],i)]}case"MaxPoolWithArgmax":{let a=O("strides",e,t,n),i=O("pad",e,t,n),s=O("kernelSize",e,t,n),o=O("includeBatchInIndex",e,t,n),{result:u,indexes:p}=r.maxPoolWithArgmax(O("x",e,t,n),[s[1],s[2]],[a[1],a[2]],i,o);return[u,p]}case"AvgPool3D":{let a=O("strides",e,t,n),i=O("pad",e,t,n),s=O("kernelSize",e,t,n);return[r.avgPool3d(O("x",e,t,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],i)]}case"MaxPool3D":{let a=O("strides",e,t,n),i=O("pad",e,t,n),s=O("kernelSize",e,t,n);return[r.maxPool3d(O("x",e,t,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],i)]}case"Dilation2D":{let a=O("strides",e,t,n),i=O("pad",e,t,n),s=O("dilations",e,t,n),o=a[1],u=a[2],p=s[1],l=s[2];return[r.dilation2d(O("x",e,t,n),O("filter",e,t,n),[o,u],i,[p,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},eE=(e,t,n,r=T)=>{switch(e.op){case"Fill":{let a=O("shape",e,t,n),i=O("dtype",e,t,n),s=O("value",e,t,n);return[r.fill(a,s,i)]}case"LinSpace":{let a=O("start",e,t,n),i=O("stop",e,t,n),s=O("num",e,t,n);return[r.linspace(a,i,s)]}case"Multinomial":{let a=O("logits",e,t,n),i=O("numSamples",e,t,n),s=O("seed",e,t,n);return[r.multinomial(a,i,s)]}case"OneHot":{let a=O("indices",e,t,n),i=O("depth",e,t,n),s=O("onValue",e,t,n),o=O("offValue",e,t,n),u=O("dtype",e,t,n);return[r.oneHot(a,i,s,o,u)]}case"Ones":return[r.ones(O("shape",e,t,n),O("dtype",e,t,n))];case"OnesLike":return[r.onesLike(O("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(O("shape",e,t,n),O("dtype",e,t,n),O("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(O("shape",e,t,n),O("minval",e,t,n),O("maxval",e,t,n),O("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(O("shape",e,t,n),O("minval",e,t,n),O("maxval",e,t,n),O("seed",e,t,n))];case"Range":{let a=O("start",e,t,n),i=O("stop",e,t,n),s=O("step",e,t,n);return[r.range(a,i,s,O("dtype",e,t,n))]}case"TruncatedNormal":{let a=O("shape",e,t,n),i=O("mean",e,t,n),s=O("stdDev",e,t,n),o=O("seed",e,t,n);return[r.truncatedNormal(a,i,s,O("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(O("shape",e,t,n),O("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(O("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function eM(e,t,n){let r=O("boxes",e,t,n),a=O("scores",e,t,n),i=O("maxOutputSize",e,t,n);return{boxes:r,scores:a,maxOutputSize:i,iouThreshold:O("iouThreshold",e,t,n),scoreThreshold:O("scoreThreshold",e,t,n),softNmsSigma:O("softNmsSigma",e,t,n)}}let eI=async(e,t,n,r,a=T)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:i,maxOutputSize:s,iouThreshold:o,scoreThreshold:u,softNmsSigma:p}=eM(e,t,n),l=await a.image.nonMaxSuppressionWithScoreAsync(r,i,s,o,u,p);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:i,maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=eM(e,t,n),p=O("padToMaxOutputSize",e,t,n),l=await a.image.nonMaxSuppressionPaddedAsync(r,i,s,o,u,p);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:i,maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=eM(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,i,s,o,u)]}case"Where":{let r=a.cast(O("condition",e,t,n),"bool"),i=[await a.whereAsync(r)];return r.dispose(),i}case"ListDiff":return a.setdiff1dAsync(O("x",e,t,n),O("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},ek=(e,t,n,r=T)=>{switch(e.op){case"LowerBound":{let a=O("sortedSequence",e,t,n),i=O("values",e,t,n);return[r.lowerBound(a,i)]}case"TopKV2":{let a=O("x",e,t,n),i=O("k",e,t,n),s=O("sorted",e,t,n),o=r.topk(a,i,s);return[o.values,o.indices]}case"UpperBound":{let a=O("sortedSequence",e,t,n),i=O("values",e,t,n);return[r.upperBound(a,i)]}case"Unique":{let a=O("x",e,t,n),i=r.unique(a);return[i.values,i.indices]}case"UniqueV2":{let a=O("x",e,t,n),i=O("axis",e,t,n),s=r.unique(a,i);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},eF=(e,t,n,r=T)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=O("default",e,t,n);return[A(e.name,t,n)||a];case"Placeholder":return[A(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[C(O("x",e,t,n))];case"IdentityN":return O("x",e,t,n).map(e=>C(e));case"Shape":return[r.tensor1d(O("x",e,t,n).shape,"int32")];case"ShapeN":return O("x",e,t,n).map(e=>r.tensor1d(e.shape));case"Size":return[r.scalar(O("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(O("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let i=O("x",e,t,n),s=O("data",e,t,n),o=O("message",e,t,n),u=O("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var eC=n(6070);class eD{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,S.scalar)(0),this.tensorMap=new Map,(0,S.keep)(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return eC.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),(0,S.tidy)(()=>{let e=(0,S.unstack)(t),r=n.length,a=e.length;S.util.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let t=0;t<r;t++){let r=n[t],a=e[t];(0,S.keep)(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return(0,S.tidy)(()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],i=this.findWithDefault(a,t);e.push(i)}return(0,S.stack)(e)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}let eL=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{let a=new eD(O("keyDType",e,t,n),O("valueDType",e,t,n));return r.addHashTable(e.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=O("tableHandle",e,t,n,r),i=O("keys",e,t,n),s=O("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(i,s)]}case"LookupTableFind":case"LookupTableFindV2":{let a=O("tableHandle",e,t,n,r),i=O("keys",e,t,n),s=O("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(i,s)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=O("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},eR=(e,t,n,r=T)=>{switch(e.op){case"ResizeBilinear":{let a=O("images",e,t,n),i=O("size",e,t,n),s=O("alignCorners",e,t,n),o=O("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[i[0],i[1]],s,o)]}case"ResizeNearestNeighbor":{let a=O("images",e,t,n),i=O("size",e,t,n),s=O("alignCorners",e,t,n),o=O("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[i[0],i[1]],s,o)]}case"CropAndResize":{let a=O("image",e,t,n),i=O("boxes",e,t,n),s=O("boxInd",e,t,n),o=O("cropSize",e,t,n),u=O("method",e,t,n),p=O("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,i,s,o,u,p)]}case"ImageProjectiveTransformV3":{let a=O("images",e,t,n),i=O("transforms",e,t,n),s=O("outputShape",e,t,n),o=O("fillValue",e,t,n),u=O("interpolation",e,t,n),p=O("fillMode",e,t,n);return[r.image.transform(a,i,u.toLowerCase(),p.toLowerCase(),o,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},ej=(e,t,n,r=T)=>{switch(e.op){case"Equal":return[r.equal(O("a",e,t,n),O("b",e,t,n))];case"NotEqual":return[r.notEqual(O("a",e,t,n),O("b",e,t,n))];case"Greater":return[r.greater(O("a",e,t,n),O("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(O("a",e,t,n),O("b",e,t,n))];case"Less":return[r.less(O("a",e,t,n),O("b",e,t,n))];case"LessEqual":return[r.lessEqual(O("a",e,t,n),O("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(O("a",e,t,n),O("b",e,t,n))];case"LogicalNot":return[r.logicalNot(O("a",e,t,n))];case"LogicalOr":return[r.logicalOr(O("a",e,t,n),O("b",e,t,n))];case"Select":case"SelectV2":return[r.where(O("condition",e,t,n),O("a",e,t,n),O("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(O("a",e,t,n),O("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},ez=(e,t,n,r=T)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(O("a",e,t,n),O("b",e,t,n),O("transposeA",e,t,n),O("transposeB",e,t,n))];case"Einsum":return[r.einsum(O("equation",e,t,n),...O("tensors",e,t,n))];case"Transpose":return[r.transpose(O("x",e,t,n),O("perm",e,t,n))];case"_FusedMatMul":let[a,i]=O("fusedOps",e,t,n),s="prelu"===i,o=O("numArgs",e,t,n),u=O("leakyreluAlpha",e,t,n);if("biasadd"===a){if(s&&2!==o)throw Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==o)throw Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,l]=O("args",e,t,n);return[r.fused.matMul({a:O("a",e,t,n),b:O("b",e,t,n),transposeA:O("transposeA",e,t,n),transposeB:O("transposeB",e,t,n),bias:p,activation:i,preluActivationWeights:l,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(O("a",e,t,n),O("numLower",e,t,n),O("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},eV=(e,t,n,r=T)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(O("x",e,t,n),O("axis",e,t,n),O("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(O("x",e,t,n),O("mean",e,t,n),O("variance",e,t,n),O("offset",e,t,n),O("scale",e,t,n),O("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(O("x",e,t,n),O("radius",e,t,n),O("bias",e,t,n),O("alpha",e,t,n),O("beta",e,t,n))];case"Softmax":return[r.softmax(O("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(O("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},eP=(e,t,n,r=T)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:i}=r.raggedGather(O("paramsNestedSplits",e,t,n),O("paramsDenseValues",e,t,n),O("indices",e,t,n),O("outputRaggedRank",e,t,n));return a.concat(i)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:i}=r.raggedRange(O("starts",e,t,n),O("limits",e,t,n),O("splits",e,t,n));return[a,i]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(O("shape",e,t,n),O("values",e,t,n),O("defaultValue",e,t,n),O("rowPartitionTensors",e,t,n),O("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},eB=(e,t,n,r=T)=>{switch(e.op){case"Max":{let a=O("axis",e,t,n),i=O("keepDims",e,t,n);return[r.max(O("x",e,t,n),a,i)]}case"Mean":{let a=O("axis",e,t,n),i=O("keepDims",e,t,n);return[r.mean(O("x",e,t,n),a,i)]}case"Min":{let a=O("axis",e,t,n),i=O("keepDims",e,t,n);return[r.min(O("x",e,t,n),a,i)]}case"Sum":{let a=O("axis",e,t,n),i=O("keepDims",e,t,n);return[r.sum(O("x",e,t,n),a,i)]}case"All":{let a=O("axis",e,t,n),i=O("keepDims",e,t,n);return[r.all(O("x",e,t,n),a,i)]}case"Any":{let a=O("axis",e,t,n),i=O("keepDims",e,t,n);return[r.any(O("x",e,t,n),a,i)]}case"ArgMax":{let a=O("axis",e,t,n);return[r.argMax(O("x",e,t,n),a)]}case"ArgMin":{let a=O("axis",e,t,n);return[r.argMin(O("x",e,t,n),a)]}case"Prod":{let a=O("axis",e,t,n),i=O("keepDims",e,t,n);return[r.prod(O("x",e,t,n),a,i)]}case"Cumprod":{let a=O("axis",e,t,n),i=O("exclusive",e,t,n),s=O("reverse",e,t,n);return[r.cumprod(O("x",e,t,n),a,i,s)]}case"Cumsum":{let a=O("axis",e,t,n),i=O("exclusive",e,t,n),s=O("reverse",e,t,n);return[r.cumsum(O("x",e,t,n),a,i,s)]}case"Bincount":let a=O("x",e,t,n),i=O("weights",e,t,n),s=O("size",e,t,n);return[r.bincount(a,i,s)];case"DenseBincount":{let a=O("x",e,t,n),i=O("weights",e,t,n),s=O("size",e,t,n),o=O("binaryOutput",e,t,n);return[r.denseBincount(a,i,s,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},eU=(e,t,n,r=T)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=O("n",e,t,n),i=O("axis",e,t,n),s=O("tensors",e,t,n);return s=s.slice(0,a),[r.concat(s,i)]}case"Gather":{let a=O("x",e,t,n),i=O("indices",e,t,n);return[r.gather(a,r.cast(i,"int32"),0)]}case"GatherV2":{let a=O("axis",e,t,n),i=O("batchDims",e,t,n),s=O("x",e,t,n),o=O("indices",e,t,n);return[r.gather(s,r.cast(o,"int32"),a,i)]}case"Reverse":{let a=O("dims",e,t,n),i=[];for(let e=0;e<a.length;e++)a[e]&&i.push(e);let s=O("x",e,t,n);return[r.reverse(s,i)]}case"ReverseV2":{let a=O("axis",e,t,n),i=O("x",e,t,n);return[r.reverse(i,a)]}case"Slice":{let a=O("begin",e,t,n),i=O("size",e,t,n);return[r.slice(O("x",e,t,n),a,i)]}case"StridedSlice":{let a=O("begin",e,t,n),i=O("end",e,t,n),s=O("strides",e,t,n),o=O("beginMask",e,t,n),u=O("endMask",e,t,n),p=O("ellipsisMask",e,t,n),l=O("newAxisMask",e,t,n),c=O("shrinkAxisMask",e,t,n),h=O("x",e,t,n);return[r.stridedSlice(h,a,i,s,o,u,p,l,c)]}case"Pack":return(0,S.tidy)(()=>{let a=O("axis",e,t,n),i=O("tensors",e,t,n),s=i[0].shape,o=r.squeeze(i[0]).shape,u=i.map(e=>{let t=S.util.arraysEqual(e.shape,s);if(!t&&!S.util.arraysEqual(r.squeeze(e).shape,o))throw Error("the input tensors shape does not match");return t?e:r.reshape(e,s)});return[r.stack(u,a)]});case"Unpack":{let a=O("axis",e,t,n),i=O("tensor",e,t,n);return r.unstack(i,a)}case"Tile":{let a=O("reps",e,t,n);return[r.tile(O("x",e,t,n),a)]}case"Split":case"SplitV":{let a=O("axis",e,t,n),i=O("numOrSizeSplits",e,t,n),s=O("x",e,t,n);return r.split(s,i,a)}case"ScatterNd":{let a=O("indices",e,t,n),i=O("values",e,t,n),s=O("shape",e,t,n);return[r.scatterND(a,i,s)]}case"GatherNd":{let a=O("x",e,t,n),i=O("indices",e,t,n);return[r.gatherND(a,i)]}case"SparseToDense":{let a=O("sparseIndices",e,t,n),i=O("outputShape",e,t,n),s=O("sparseValues",e,t,n),o=O("defaultValue",e,t,n);return[r.sparseToDense(a,s,i,s.dtype===o.dtype?o:r.cast(o,s.dtype))]}case"TensorScatterUpdate":{let a=O("indices",e,t,n),i=O("values",e,t,n),s=O("tensor",e,t,n);return[r.tensorScatterUpdate(s,a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},e$=(e,t,n,r=T)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:i,emptyRowIndicator:s,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(O("indices",e,t,n),O("values",e,t,n),O("denseShape",e,t,n),O("defaultValue",e,t,n));return[a,i,s,o]}case"SparseReshape":{let{outputIndices:a,outputShape:i}=r.sparse.sparseReshape(O("inputIndices",e,t,n),O("inputShape",e,t,n),O("newShape",e,t,n));return[a,i]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(O("data",e,t,n),O("indices",e,t,n),O("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(O("data",e,t,n),O("indices",e,t,n),O("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},eH=(e,t,n,r=T)=>{switch(e.op){case"FFT":return[r.fft(O("x",e,t,n))];case"IFFT":return[r.ifft(O("x",e,t,n))];case"RFFT":return[r.rfft(O("x",e,t,n))];case"IRFFT":return[r.irfft(O("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},eG=(e,t,n,r=T)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(O("input",e,t,n),O("pattern",e,t,n),O("rewrite",e,t,n),O("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:a,nGramsSplits:i}=r.string.stringNGrams(O("data",e,t,n),O("dataSplits",e,t,n),O("separator",e,t,n),O("nGramWidths",e,t,n),O("leftPad",e,t,n),O("rightPad",e,t,n),O("padWidth",e,t,n),O("preserveShortSequences",e,t,n));return[a,i]}case"StringSplit":{let{indices:a,values:i,shape:s}=r.string.stringSplit(O("input",e,t,n),O("delimiter",e,t,n),O("skipEmpty",e,t,n));return[a,i,s]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(O("input",e,t,n),O("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},eW=(e,t,n,r=T)=>{switch(e.op){case"Cast":return[r.cast(O("x",e,t,n),O("dtype",e,t,n))];case"ExpandDims":{let a=O("axis",e,t,n);return[r.expandDims(O("x",e,t,n),a)]}case"Squeeze":{let a=O("axis",e,t,n);return[r.squeeze(O("x",e,t,n),a)]}case"Reshape":return[r.reshape(O("x",e,t,n),O("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(O("x",e,t,n),O("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(O("x",e,t,n),O("padding",e,t,n),O("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(O("x",e,t,n),O("padding",e,t,n),O("constantValue",e,t,n))];case"SpaceToBatchND":{let a=O("blockShape",e,t,n),i=O("paddings",e,t,n);return[r.spaceToBatchND(O("x",e,t,n),a,i)]}case"BatchToSpaceND":{let a=O("blockShape",e,t,n),i=O("crops",e,t,n);return[r.batchToSpaceND(O("x",e,t,n),a,i)]}case"DepthToSpace":{let a=O("blockSize",e,t,n),i=O("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(O("x",e,t,n),a,i)]}case"BroadcastTo":return[r.broadcastTo(O("x",e,t,n),O("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(O("s0",e,t,n),O("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function eq(e,t,n,r,a=S.tidy){let i=((e,t,n)=>{switch(e.category){case"arithmetic":return a(()=>eg(e,t,n));case"basic_math":return a(()=>ev(e,t,n));case"control":return e_(e,t,n);case"convolution":return a(()=>eA(e,t,n));case"creation":return a(()=>eE(e,t,n));case"dynamic":return eI(e,t,n);case"evaluation":return a(()=>ek(e,t,n));case"image":return a(()=>eR(e,t,n));case"graph":return a(()=>eF(e,t,n));case"logical":return a(()=>ej(e,t,n));case"matrices":return a(()=>ez(e,t,n));case"normalization":return a(()=>eV(e,t,n));case"ragged":return a(()=>eP(e,t,n));case"reduction":return a(()=>eB(e,t,n));case"slice_join":return a(()=>eU(e,t,n));case"sparse":return a(()=>e$(e,t,n));case"spectral":return a(()=>eH(e,t,n));case"string":return a(()=>eG(e,t,n));case"transformation":return a(()=>eW(e,t,n));case"hash_table":return eL(e,t,n,r);case"custom":let i=_[e.op];if(i&&i.customExecutor)return i.customExecutor(new ef(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return S.util.isPromise(i)?i.then(e=>[].concat(e)):[].concat(i)}class eK{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function eX(e,t,n,r){let a=new Set,i=[],s=null,o=null,u=new Set,p=new Set(Object.keys(e).map(e=>k(e)[0])),l=new Set((r=r||[]).map(e=>k(e.name)[0])),c=[...t];for(;c.length>0;){let e=c.pop();if((e1(e)||eJ.has(e.op)||eZ.has(e.op))&&null==s&&(o=(s=e).children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),!(null!=n[e.name]||p.has(e.name)||l.has(e.name))){if(0===e.inputs.length){i.push(e.name);continue}e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),c.push(e))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:i,dynamicNode:s,syncInputs:o}}class eY extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}let eQ=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),eJ=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),eZ=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function e1(e){return eQ.has(e.op)}class e2{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new e2(e.functions[t],this)})}getCompilationKey(e,t){let n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){let n=eX(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:i}=n;if(null!=a)throw Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){let n=t.map(e=>e.name),a=Object.keys(e);throw Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}let s=function(e,t){let{usedNodes:n,inputs:r}=t,a=Object.keys(r).map(e=>k(e)[0]).map(t=>e.nodes[t]),i=e.initNodes||[],s=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map(e=>[e.name,e])).values()]}let u=o([...a,...e.weights,...i]).filter(s),p=o([...u,...Object.values(e.nodes)]).filter(s),l=new Map(p.map(e=>[e.name,e])),c={};for(let e of p)for(let t of(c[e.name]=c[e.name]||0,e.children))s(t)||(c[t.name]=Number.POSITIVE_INFINITY),c[t.name]=(c[t.name]||0)+1;let h=Object.entries(c).filter(([,e])=>0===e).map(([e])=>e),m=[...h];for(;h.length>0;){let e=h.pop();for(let t of l.get(e).children.filter(s))0==--c[t.name]&&(m.push(t.name),h.push(t.name))}let d=function(e,t){let n=new Map(e.map(e=>[e.name,e])),r=t.map(e=>e.name),a=new Set(r);for(;r.length>0;){let e=r.pop();for(let t of n.get(e).children)!n.has(t.name)||a.has(t.name)||(a.add(t.name),r.push(t.name))}return e.filter(e=>a.has(e.name))}(m.map(e=>l.get(e)),u);return function(e,t){let n=new Map(e.map((e,t)=>[e.name,t])),r=new Set(t.map(e=>e.name)),a=e=>r.has("string"==typeof e?e:e.name),i=new Set(e.map(e=>e.name)),s=e=>i.has("string"==typeof e?e:e.name);for(let t of e){for(let e of t.children.filter(s)){if(!n.has(e.name))throw new eY(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new eY(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!a(t))for(let e of t.inputs){if(!n.has(e.name))throw new eY(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new eY(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(d,u),d}(this.graph,n),o=function(e){let t=new Map(e.map((e,t)=>[e.name,t])),n=Number.MAX_SAFE_INTEGER,r=e.map((e,t)=>e1(e)?n:t),a=e=>{let n=r[t.get(e.name)];return null==n?-1:n},i=e.map((e,t)=>e.children.map(a).reduce((e,t)=>Math.max(e,t),r[t])),s=new Map;for(let t=0;t<e.length;++t){let r=i[t];if(r===n)continue;let a=e[t],o=e[r];s.has(o.name)||s.set(o.name,[]),s.get(o.name).push(a)}return s}(s);return{orderedNodes:s,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return(0,S.keep)(t),t}cloneTensorList(e){return e?e.map(e=>this.cloneAndKeepTensor(e)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[e,this.cloneTensorList(t)]))}execute(e,t){this.disposeIntermediateTensors();let n=Object.keys(e=this.mapInputs(e)).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map(e=>this.graph.nodes[k(e)[0]]),a=t.map(e=>k(e)[0]),i=new Set(a),s=a.map(e=>this.graph.nodes[e]);0===s.length&&(s=this._outputs);let o=this.getCompilationKey(r,s),u=this.compiledMap.get(o);null==u&&(u=this.compile(e,s),this.compiledMap.set(o,u));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let p={},l={};return(0,S.tidy)(()=>{let n=new eK(this.weightMap,p,l,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{let[a,i]=k(t,n),s=[];s[i]=e[t],r[a]=s,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(s))});let a=this.getFrozenTensorIds(r),{orderedNodes:s,nodeLiveUntilMap:o}=u;for(let e of s){if(r[e.name])continue;let t=eq(e,r,n,this._resourceManager);if(S.util.isPromise(t))throw Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,a,i,o.get(e.name))}return null==this.parent&&n.dispose(a),t.map(e=>A(e,r,n))})}getFrozenTensorIds(e){return new Set([].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id))))}checkTensorForDisposal(e,t,n,r,a,i,s){if(!(e1(t)||i.has(e))){for(let r of n[e])null!=r&&(s[r.id]=(s[r.id]||0)+t.children.length);for(let e of t.inputs){if(e1(e))continue;let t=E(e.name,n,r);if(null!=t)for(let e of t){if(!e||e.kept||a.has(e.id))continue;let t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,i){if(!e1(e)&&null!=i){for(let e of i)if(!(e1(e)||a.has(e.name)))for(let a of E(e.name,t,n))!a||a.kept||r.has(a.id)||a.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},a={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let i=new eK(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let s=await this.executeWithControlFlow(e,i,t,n),o=t.map(e=>A(e,s,i)),u=new Set([...o.map(e=>e.id),...Object.keys(e).map(t=>e[t].id),...this.weightIds]);return Object.values(s).forEach(e=>{e.forEach(e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()})}),null==this.parent&&i.dispose(u),o}async executeFunctionAsync(e,t,n){let r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),i=a.map(e=>this.graph.nodes[k(e)[0]]),s=n.map(e=>k(e)[0]),o=new Set(s),u=s.map(e=>this.graph.nodes[e]);0===u.length&&(u=this._outputs);let{usedNodes:p,missingInputs:l,dynamicNode:c,syncInputs:h}=eX(e,u,this.weightMap,this._initNodes),m=[...i,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),d=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{let[n,r]=k(t),a=[];a[r]=e[t],d[n]=a});let f={},y=this.getFrozenTensorIds(d),g={};for(;m.length>0;){let e=this.processStack(i,m,t,d,g,y,o,f,p);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let v=u.filter(e=>!e1(e)&&!A(e.name,d,t)).map(e=>e.name);if(v.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),Error(`Cannot compute the outputs [${v}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,a,i,s,o,u){let p=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let l="";if("Enter"===e.node.op&&O("isConstant",e.node,r,n)&&([l]=M(e.node.name,n)),null==r[e.node.name]){let c=eq(e.node,r,n,this._resourceManager);l||([l]=M(e.node.name,n));let h=n.currentContext;S.util.isPromise(c)?p.push(c.then(p=>(r[l]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[l]=this.cloneTensorList(p)),n.currentContext=h,this.checkTensorForDisposal(l,e.node,r,n,i,s,o),this.processChildNodes(e.node,t,n,r,a,u),p))):(r[l]=c,this.keepIntermediateTensors&&(this.clonedTensorsMap[l]=this.cloneTensorList(c)),this.checkTensorForDisposal(l,e.node,r,n,i,s,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return p}processChildNodes(e,t,n,r,a,i){e.children.forEach(e=>{let[s]=M(e.name,n);!a[s]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!A(e,r,n))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!A(e,r,n))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[r]=k(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);S.util.assert(t,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&S.util.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;let r={};for(let a in e){let i=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=i?r[i.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){let t=Object.keys(e).filter(e=>{let[t]=k(e);return null==this.graph.nodes[t]});if(t.length>0)throw Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,n;let r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e},{})}checkOutputs(e){e.forEach(e=>{let[t]=k(e);if(!this.graph.nodes[t])throw Error(`The output '${e}' is not found in the graph`)})}}class e3{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var e4=n(3850);class e0{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=S.io){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new e3}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return S.util.isPromise(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw Error("Model artifacts missing streamWeights function");let t=await (0,e4.r)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let n=this.artifacts.modelTopology,r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new e2(ee.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=ee.Instance.transformGraph(e.modelInitializer);this.initializer=new e2(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof S.Tensor?[e]:e,n={};return t.forEach((e,t)=>n[this.structuredOutputKeys[t]]=e),n}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof S.Tensor)&&!Array.isArray(e)){let n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(let t in n){let r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((t,n)=>{var a,i,s;let o=null===(s=null===(i=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===i?void 0:i[n])||void 0===s?void 0:s.resourceId;return null!=o?t[n]=this.resourceIdToCapturedInput[o]:t[n]=e[r++],t},{})}normalizeOutputs(e){return Array.isArray(e=e||this.outputNodes)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=t[n[r]];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,S.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function e6(e,t={},n=S.io){var r;if(null==e)throw Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&((r=e).endsWith("/")||(r+="/"),e=`${r}model.json?tfjs-format=file`);let a=new e0(e,t,n);return await a.load(),a}var e5=function(){return(e5=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function e7(e,t,n,r){return new(n||(n=Promise))(function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?a(e.value):((t=e.value)instanceof n?t:new n(function(e){e(t)})).then(s,o)}u((r=r.apply(e,t||[])).next())})}function e9(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}function e8(e){var t=e.map(function(e){return e[0]});return t.push(e[e.length-1][1]),t}var te={lips:e8([[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]]),leftEye:e8([[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]]),leftEyebrow:e8([[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]]),leftIris:e8([[474,475],[475,476],[476,477],[477,474]]),rightEye:e8([[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]]),rightEyebrow:e8([[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]]),rightIris:e8([[469,470],[470,471],[471,472],[472,469]]),faceOval:e8([[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]])},tt=[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]],tn=new Map(Object.entries(te).map(function(e){var t=e[0];return e[1].map(function(e){return[e,t]})}).flat());function tr(e){for(var t={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,a=Number.MAX_SAFE_INTEGER,i=Number.MIN_SAFE_INTEGER,s=0;s<e.length;++s){var o=e[s];n=Math.min(n,o.x),r=Math.max(r,o.x),a=Math.min(a,o.y),i=Math.max(i,o.y),t.locationData.relativeKeypoints.push({x:o.x,y:o.y})}return t.locationData.relativeBoundingBox={xMin:n,yMin:a,xMax:r,yMax:i,width:r-n,height:i-a},t}var ta={runtime:"mediapipe",maxFaces:1,refineLandmarks:!1},ti=function(){function e(e){var t=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceMeshSolution=new w.FaceMesh({locateFile:function(t,n){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+t:n+"/"+t}}),this.faceMeshSolution.setOptions({refineLandmarks:e.refineLandmarks,selfieMode:this.selfieMode,maxNumFaces:e.maxFaces}),this.faceMeshSolution.onResults(function(e){if(t.height=e.image.height,t.width=e.image.width,t.faces=[],null!==e.multiFaceLandmarks)for(var n=e.multiFaceLandmarks,r=0;r<n.length;r++){var a=t.translateOutput(n[r]);t.faces.push({keypoints:a,box:tr(a).locationData.relativeBoundingBox})}})}return e.prototype.translateOutput=function(e){var t=this;return e.map(function(e,n){var r={x:e.x*t.width,y:e.y*t.height,z:e.z*t.width},a=tn.get(n);return null!=a&&(r.name=a),r})},e.prototype.estimateFaces=function(e,t){return e7(this,void 0,void 0,function(){var n,r;return e9(this,function(a){switch(a.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.faceMeshSolution.setOptions({selfieMode:this.selfieMode})),e instanceof S.Tensor?(r=ImageData.bind,[4,S.browser.toPixels(e)]):[3,2];case 1:return n=new(r.apply(ImageData,[void 0,a.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:n=e,a.label=3;case 3:return e=n,[4,this.faceMeshSolution.send({image:e})];case 4:return a.sent(),[2,this.faces]}})})},e.prototype.dispose=function(){this.faceMeshSolution.close()},e.prototype.reset=function(){this.faceMeshSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},e.prototype.initialize=function(){return this.faceMeshSolution.initialize()},e}(),ts="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{},to={};(function(){function e(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var t="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e},n=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof ts&&ts];for(var t=0;t<e.length;++t){var n=e[t];if(n&&n.Math==Math)return n}throw Error("Cannot find global object")}(this);function r(e,r){if(r)t:{var a=n;e=e.split(".");for(var i=0;i<e.length-1;i++){var s=e[i];if(!(s in a))break t;a=a[s]}(r=r(i=a[e=e[e.length-1]]))!=i&&null!=r&&t(a,e,{configurable:!0,writable:!0,value:r})}}function a(t){var n="undefined"!=typeof Symbol&&Symbol.iterator&&t[Symbol.iterator];return n?n.call(t):{next:e(t)}}function i(e){if(!(e instanceof Array)){e=a(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}r("Symbol",function(e){function n(e,n){this.g=e,t(this,"description",{configurable:!0,writable:!0,value:n})}if(e)return e;n.prototype.toString=function(){return this.g};var r="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",a=0;return function e(t){if(this instanceof e)throw TypeError("Symbol is not a constructor");return new n(r+(t||"")+"_"+a++,t)}}),r("Symbol.iterator",function(r){if(r)return r;r=Symbol("Symbol.iterator");for(var a="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),i=0;i<a.length;i++){var s=n[a[i]];"function"==typeof s&&"function"!=typeof s.prototype[r]&&t(s.prototype,r,{configurable:!0,writable:!0,value:function(){var t;return(t={next:t=e(this)})[Symbol.iterator]=function(){return this},t}})}return r});var s,o,u="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)o=Object.setPrototypeOf;else{t:{var p={};try{p.__proto__={a:!0},O=p.a;break t}catch(e){}O=!1}o=O?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw TypeError(e+" is not extensible");return e}:null}var l=o;function c(e,t){if(e.prototype=u(t.prototype),e.prototype.constructor=e,l)l(e,t);else for(var n in t)if("prototype"!=n){if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(t,n);r&&Object.defineProperty(e,n,r)}else e[n]=t[n]}e.na=t.prototype}function h(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.u=this.o=0,this.j=null}function m(e){if(e.l)throw TypeError("Generator is already running");e.l=!0}function d(e,t){e.j={da:t,ea:!0},e.g=e.o||e.u}function f(e,t,n){return e.g=n,{value:t}}function y(e){this.g=new h,this.h=e}function g(e,t,n,r){try{var a=t.call(e.g.i,n);if(!(a instanceof Object))throw TypeError("Iterator result "+a+" is not an object");if(!a.done)return e.g.l=!1,a;var i=a.value}catch(t){return e.g.i=null,d(e.g,t),v(e)}return e.g.i=null,r.call(e.g,i),v(e)}function v(e){for(;e.g.g;)try{var t=e.h(e.g);if(t)return e.g.l=!1,{value:t.value,done:!1}}catch(t){e.g.h=void 0,d(e.g,t)}if(e.g.l=!1,e.g.j){if(t=e.g.j,e.g.j=null,t.ea)throw t.da;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function b(e){this.next=function(t){return m(e.g),e.g.i?t=g(e,e.g.i.next,t,e.g.s):(e.g.s(t),t=v(e)),t},this.throw=function(t){return m(e.g),e.g.i?t=g(e,e.g.i.throw,t,e.g.s):(d(e.g,t),t=v(e)),t},this.return=function(t){var n;return m(e.g),(n=e.g.i)?g(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),v(e))},this[Symbol.iterator]=function(){return this}}function x(e){return function(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise(function(r,a){!function e(i){i.done?r(i.value):Promise.resolve(i.value).then(t,n).then(e,a)}(e.next())})}(new b(new y(e)))}h.prototype.s=function(e){this.h=e},h.prototype.return=function(e){this.j={return:e},this.g=this.u},r("Promise",function(e){function t(e){this.h=0,this.i=void 0,this.g=[],this.s=!1;var t=this.j();try{e(t.resolve,t.reject)}catch(e){t.reject(e)}}function r(){this.g=null}function i(e){return e instanceof t?e:new t(function(t){t(e)})}if(e)return e;r.prototype.h=function(e){if(null==this.g){this.g=[];var t=this;this.i(function(){t.l()})}this.g.push(e)};var s=n.setTimeout;r.prototype.i=function(e){s(e,0)},r.prototype.l=function(){for(;this.g&&this.g.length;){var e=this.g;this.g=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(e){this.j(e)}}}this.g=null},r.prototype.j=function(e){this.i(function(){throw e})},t.prototype.j=function(){function e(e){return function(r){n||(n=!0,e.call(t,r))}}var t=this,n=!1;return{resolve:e(this.D),reject:e(this.l)}},t.prototype.D=function(e){if(e===this)this.l(TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.H(e);else{switch(typeof e){case"object":var n=null!=e;break;case"function":n=!0;break;default:n=!1}n?this.A(e):this.o(e)}},t.prototype.A=function(e){var t=void 0;try{t=e.then}catch(e){return void this.l(e)}"function"==typeof t?this.I(t,e):this.o(e)},t.prototype.l=function(e){this.u(2,e)},t.prototype.o=function(e){this.u(1,e)},t.prototype.u=function(e,t){if(0!=this.h)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.h);this.h=e,this.i=t,2===this.h&&this.G(),this.B()},t.prototype.G=function(){var e=this;s(function(){if(e.C()){var t=n.console;void 0!==t&&t.error(e.i)}},1)},t.prototype.C=function(){if(this.s)return!1;var e=n.CustomEvent,t=n.Event,r=n.dispatchEvent;return void 0===r||("function"==typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"==typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=n.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.i,r(e))},t.prototype.B=function(){if(null!=this.g){for(var e=0;e<this.g.length;++e)o.h(this.g[e]);this.g=null}};var o=new r;return t.prototype.H=function(e){var t=this.j();e.M(t.resolve,t.reject)},t.prototype.I=function(e,t){var n=this.j();try{e.call(t,n.resolve,n.reject)}catch(e){n.reject(e)}},t.prototype.then=function(e,n){function r(e,t){return"function"==typeof e?function(t){try{a(e(t))}catch(e){i(e)}}:t}var a,i,s=new t(function(e,t){a=e,i=t});return this.M(r(e,a),r(n,i)),s},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.M=function(e,t){function n(){switch(r.h){case 1:e(r.i);break;case 2:t(r.i);break;default:throw Error("Unexpected state: "+r.h)}}var r=this;null==this.g?o.h(n):this.g.push(n),this.s=!0},t.resolve=i,t.reject=function(e){return new t(function(t,n){n(e)})},t.race=function(e){return new t(function(t,n){for(var r=a(e),s=r.next();!s.done;s=r.next())i(s.value).M(t,n)})},t.all=function(e){var n=a(e),r=n.next();return r.done?i([]):new t(function(e,t){var a=[],s=0;do a.push(void 0),s++,i(r.value).M(function(t){return function(n){a[t]=n,0==--s&&e(a)}}(a.length-1),t),r=n.next();while(!r.done)})},t});var N="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r)for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e};r("Object.assign",function(e){return e||N}),r("Object.is",function(e){return e||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}}),r("Array.prototype.includes",function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var r=n.length;for(0>(t=t||0)&&(t=Math.max(t+r,0));t<r;t++){var a=n[t];if(a===e||Object.is(a,e))return!0}return!1}}),r("String.prototype.includes",function(e){return e||function(e,t){if(null==this)throw TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw TypeError("First argument to String.prototype.includes must not be a regular expression");return -1!==this.indexOf(e,t||0)}}),r("Array.prototype.keys",function(e){return e||function(){var e,t,n,r,a;return e=this,t=function(e){return e},e instanceof String&&(e+=""),n=0,r=!1,(a={next:function(){if(!r&&n<e.length){var a=n++;return{value:t(a,e[a]),done:!1}}return r=!0,{done:!0,value:void 0}}})[Symbol.iterator]=function(){return a},a}});var T=this||self;function w(e,t){e=e.split(".");var n,r=T;for((e[0]in r)||void 0===r.execScript||r.execScript("var "+e[0]);e.length&&(n=e.shift());)e.length||void 0===t?r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}:r[n]=t}function S(){throw Error("Invalid UTF8")}function _(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var O,A,E,M="undefined"!=typeof TextDecoder,I="undefined"!=typeof TextEncoder,k={},F=null;function C(e){var t;void 0===t&&(t=0),L(),t=k[t];for(var n=Array(Math.floor(e.length/3)),r=t[64]||"",a=0,i=0;a<e.length-2;a+=3){var s=e[a],o=e[a+1],u=e[a+2],p=t[s>>2];s=t[(3&s)<<4|o>>4],o=t[(15&o)<<2|u>>6],u=t[63&u],n[i++]=p+s+o+u}switch(p=0,u=r,e.length-a){case 2:u=t[(15&(p=e[a+1]))<<2]||r;case 1:e=e[a],n[i]=t[e>>2]+t[(3&e)<<4|p>>4]+u+r}return n.join("")}function D(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var r=new Uint8Array(n),a=0;return function(e,t){function n(t){for(;r<e.length;){var n=e.charAt(r++),a=F[n];if(null!=a)return a;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}L();for(var r=0;;){var a=n(-1),i=n(0),s=n(64),o=n(64);if(64===o&&-1===a)break;t(a<<2|i>>4),64!=s&&(t(i<<4&240|s>>2),64!=o&&t(s<<6&192|o))}}(e,function(e){r[a++]=e}),a!==n?r.subarray(0,a):r}function L(){if(!F){F={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var r=e.concat(t[n].split(""));k[n]=r;for(var a=0;a<r.length;a++){var i=r[a];void 0===F[i]&&(F[i]=a)}}}}var R,j="function"==typeof Uint8Array;function z(e){return j&&null!=e&&e instanceof Uint8Array}function V(e){if(this.L=e,null!==e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}var P="function"==typeof Uint8Array.prototype.slice,B=0;function U(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function $(){return Error("Failed to read varint, encoding is invalid.")}function H(e,t){t=void 0!==(t=void 0===t?{}:t).v&&t.v,this.h=null,this.g=this.i=this.j=0,this.v=t,e&&G(this,e)}function G(e,t){e.h=function(e,t){if(e.constructor===Uint8Array)return e;if(e.constructor===ArrayBuffer||e.constructor===Array)return new Uint8Array(e);if(e.constructor===String)return D(e);if(e.constructor===V)return!t&&(t=e.L)&&t.constructor===Uint8Array?t:(t=null==(t=e.L)||z(t)?t:"string"==typeof t?D(t):null,(e=e.L=t)?new Uint8Array(e):R||(R=new Uint8Array(0)));if(e instanceof Uint8Array)return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, or Array of numbers")}(t,e.v),e.j=0,e.i=e.h.length,e.g=e.j}function W(e){if(e.g>e.i)throw Error("Tried to read past the end of the data "+e.g+" > "+e.i)}function q(e){var t=e.h,n=t[e.g],r=127&n;if(128>n)return e.g+=1,W(e),r;if(r|=(127&(n=t[e.g+1]))<<7,128>n)return e.g+=2,W(e),r;if(r|=(127&(n=t[e.g+2]))<<14,128>n)return e.g+=3,W(e),r;if(r|=(127&(n=t[e.g+3]))<<21,128>n)return e.g+=4,W(e),r;if(n=t[e.g+4],e.g+=5,r|=(15&n)<<28,128>n)return W(e),r;if(128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++])throw $();return W(e),r}H.prototype.reset=function(){this.g=this.j};var K=[];function X(){this.g=[]}function Y(e,t){for(;127<t;)e.g.push(127&t|128),t>>>=7;e.g.push(t)}function Q(e){var t={},n=void 0!==t.W&&t.W;this.l={v:void 0!==t.v&&t.v},this.W=n,t=this.l,K.length?(n=K.pop(),t&&(n.v=t.v),e&&G(n,e),e=n):e=new H(e,t),this.g=e,this.j=this.g.g,this.h=this.i=-1}function J(e){var t=e.g;if(t.g==t.i)return!1;e.j=e.g.g;var n=q(e.g)>>>0;if(t=n>>>3,!(0<=(n&=7)&&5>=n))throw U(n,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.i=t,e.h=n,!0}X.prototype.length=function(){return this.g.length},X.prototype.end=function(){var e=this.g;return this.g=[],e},Q.prototype.reset=function(){this.g.reset(),this.j=this.g.g,this.h=this.i=-1};var Z=[];function ee(){this.i=[],this.h=0,this.g=new X}function et(e,t){0!==t.length&&(e.i.push(t),e.h+=t.length)}var en="function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol(void 0):void 0;function er(e,t){Object.isFrozen(e)||(en?e[en]|=t:void 0!==e.N?e.N|=t:Object.defineProperties(e,{N:{value:t,configurable:!0,writable:!0,enumerable:!1}}))}function ea(e){var t;return null==(t=en?e[en]:e.N)?0:t}function ei(e){return er(e,1),e}function es(e){return!!Array.isArray(e)&&!!(2&ea(e))}function eo(e){if(!Array.isArray(e))throw Error("cannot mark non-array as immutable");er(e,2)}function eu(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)&&e.constructor===Object}var ep=Object.freeze(ei([]));function el(e){if(es(e.m))throw Error("Cannot mutate an immutable Message")}var ec,eh="undefined"!=typeof Symbol&&void 0!==Symbol.hasInstance;function em(e){return{value:e,configurable:!1,writable:!1,enumerable:!1}}function ed(e,t,n){return -1===t?null:t>=e.i?e.g?e.g[t]:void 0:void 0!==n&&n&&e.g&&null!=(n=e.g[t])?n:e.m[t+e.h]}function ef(e,t,n,r){r=void 0!==r&&r,el(e),t<e.i&&!r?e.m[t+e.h]=n:(e.g||(e.g=e.m[e.i+e.h]={}))[t]=n}function ey(e,t,n,r){n=void 0===n||n;var a=ed(e,t,r=void 0!==r&&r);return null==a&&(a=ep),es(e.m)?n&&(eo(a),Object.freeze(a)):(a===ep||es(a))&&ef(e,t,a=ei(a.slice()),r),a}function eg(e,t,n){return null==(e=null==(e=ed(e,t))?e:+e)?void 0===n?0:n:e}function ev(e,t,n,r){e.j||(e.j={});var a=es(e.m),i=e.j[n];if(!i){r=ey(e,n,!0,void 0!==r&&r),i=[],a=a||es(r);for(var s=0;s<r.length;s++)i[s]=new t(r[s]),a&&eo(i[s].m);a&&(eo(i),Object.freeze(i)),e.j[n]=i}return i}function eb(e,t,n,r,a){var i=void 0!==i&&i;return el(e),i=ev(e,n,t,i),n=r||new n,e=ey(e,t),null!=a?(i.splice(a,0,n),e.splice(a,0,n.m)):(i.push(n),e.push(n.m)),n}function ex(e,t){return null==(e=ed(e,t))?0:e}function eN(e,t){return null==(e=ed(e,t))?"":e}function eT(e){var t=ew;return function e(t,n){for(var r=t.slice(),a=0;a<r.length;a++)r[a]=function t(n,r){if(null!=n){if(Array.isArray(n))n=e(n,r);else if(eu(n)){var a,i={};for(a in n)i[a]=t(n[a],r);n=i}else n=r(n);return n}}(r[a],n);return Array.isArray(t)&&1&ea(t)&&ei(r),r}(e,t=void 0===t?eS:t)}function ew(e){return e&&"object"==typeof e&&e.toJSON?e.toJSON():Array.isArray(e=function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e&&!Array.isArray(e)){if(z(e))return C(e);if(e instanceof V){var t=e.L;return t=null==t||"string"==typeof t?t:j&&t instanceof Uint8Array?C(t):null,(e.L=t)||""}}}return e}(e))?eT(e):e}function eS(e){return z(e)?new Uint8Array(e):e}function e_(e,t,n){e||(e=ec),ec=null;var r=this.constructor.h;if(e||(e=r?[r]:[]),this.h=(r?0:-1)-(this.constructor.g||0),this.j=void 0,this.m=e,e=(r=this.m.length)-1,r&&eu(r=this.m[e])?(this.i=e-this.h,this.g=r):void 0!==t&&-1<t?(this.i=Math.max(t,e+1-this.h),this.g=void 0):this.i=Number.MAX_VALUE,n)for(t=0;t<n.length;t++)if((e=n[t])<this.i)e+=this.h,(r=this.m[e])?Array.isArray(r)&&ei(r):this.m[e]=ep;else{var a=(r=this.g||(this.g=this.m[this.i+this.h]={}))[e];a?Array.isArray(a)&&ei(a):r[e]=ep}}function eO(){e_.apply(this,arguments)}if(e_.prototype.toJSON=function(){return eT(this.m)},e_.prototype.toString=function(){return this.m.toString()},c(eO,e_),eh){var eA={};Object.defineProperties(eO,(eA[Symbol.hasInstance]=em(function(){throw Error("Cannot perform instanceof checks for MutableMessage")}),eA))}function eE(e,t,n){if(n){var r,a={};for(r in n){var i=n[r],s=i.ha;s||(a.F=i.la||i.fa.P,i.aa?(a.U=eD(i.aa),s=function(e){return function(t,n,r){return e.F(t,n,r,e.U)}}(a)):i.ca?(a.T=eL(i.X.g,i.ca),s=function(e){return function(t,n,r){return e.F(t,n,r,e.T)}}(a)):s=a.F,i.ha=s),s(t,e,i.X),a={F:a.F,U:a.U,T:a.T}}}!function(e,t){if(t=t.ba){et(e,e.g.end());for(var n=0;n<t.length;n++)et(e,t[n])}}(t,e)}var eM=Symbol();function eI(e,t,n){return e[eM]||(e[eM]=function(e,r){return t(e,r,n)})}function ek(e){var t=e[eM];if(!t){var n=eq(e);t=function(e,t){return eK(e,t,n)},e[eM]=t}return t}function eF(e,t,n,r,a,i){var s=0;for((e=e()).length&&"number"!=typeof e[0]&&(n(t,e[0]),s++);s<e.length;){n=e[s++];for(var o=s+1;o<e.length&&"number"!=typeof e[o];)o++;var u=e[s++];switch(o-=s){case 0:r(t,n,u);break;case 1:r(t,n,u,e[s++]);break;case 2:a(t,n,u,e[s++],e[s++]);break;case 3:o=e[s++];var p=e[s++],l=e[s++];Array.isArray(l)?a(t,n,u,o,p,l):i(t,n,u,o,p,l);break;case 4:i(t,n,u,e[s++],e[s++],e[s++],e[s++]);break;default:throw Error("unexpected number of binary field arguments: "+o)}}return t}var eC=Symbol();function eD(e){var t=e[eC];if(!t){var n=eB(e);t=function(e,t){return eY(e,t,n)},e[eC]=t}return t}function eL(e,t){var n=e[eC];return n||(n=function(e,n){return eE(e,n,t)},e[eC]=n),n}var eR=Symbol();function ej(e,t){e.push(t)}function ez(e,t,n){e.push(t,n.P)}function eV(e,t,n,r,a){var i=eD(a),s=n.P;e.push(t,function(e,t,n){return s(e,t,n,r,i)})}function eP(e,t,n,r,a,i){var s=eL(r,i),o=n.P;e.push(t,function(e,t,n){return o(e,t,n,r,s)})}function eB(e){return e[eR]||eF(e,e[eR]=[],ej,ez,eV,eP)}var eU=Symbol();function e$(e,t){e[0]=t}function eH(e,t,n,r){var a=n.O;e[t]=r?function(e,t,n){return a(e,t,n,r)}:a}function eG(e,t,n,r,a,i){var s=n.O,o=ek(a);e[t]=function(e,t,n){return s(e,t,n,r,o,i)}}function eW(e,t,n,r,a,i,s){var o=n.O,u=eI(r,a,i);e[t]=function(e,t,n){return o(e,t,n,r,u,s)}}function eq(e){return e[eU]||eF(e,e[eU]={},e$,eH,eG,eW)}function eK(e,t,n){for(;J(t)&&4!=t.h;){var r=t.i,a=n[r];if(!a){var i=n[0];i&&(i=i[r])&&(a=n[r]=function(e){var t,n=(t=e.aa)?ek(t):(t=e.ka)?eI(e.X.g,t,e.ca):void 0,r=e.X,a=e.fa.O;return n?function(e,t){return a(e,t,r,n)}:function(e,t){return a(e,t,r)}}(i))}if(!(a&&a(t,e,r)||(a=t,r=e,i=a.j,function e(t){switch(t.h){case 0:if(0!=t.h)e(t);else t:{for(var n=(t=t.g).g,r=n+10;n<r;)if(0==(128&t.h[n++])){t.g=n,W(t);break t}throw $()}break;case 1:(t=t.g).g+=8,W(t);break;case 2:2!=t.h?e(t):(n=q(t.g)>>>0,(t=t.g).g+=n,W(t));break;case 5:(t=t.g).g+=4,W(t);break;case 3:for(n=t.i;;){if(!J(t))throw Error("Unmatched start-group tag: stream EOF");if(4==t.h){if(t.i!=n)throw Error("Unmatched end-group tag");break}e(t)}break;default:throw U(t.h,t.j)}}(a),a.W))){var s=a.g.h;a=i===(a=a.g.g)?R||(R=new Uint8Array(0)):P?s.slice(i,a):new Uint8Array(s.subarray(i,a)),(i=r.ba)?i.push(a):r.ba=[a]}}return e}function eX(e,t,n){if(Z.length){var r=Z.pop();e&&(G(r.g,e),r.i=-1,r.h=-1),e=r}else e=new Q(e);try{return eK(new t,e,eq(n))}finally{(t=e.g).h=null,t.j=0,t.i=0,t.g=0,t.v=!1,e.i=-1,e.h=-1,100>Z.length&&Z.push(e)}}function eY(e,t,n){for(var r=n.length,a=1==r%2,i=a?1:0;i<r;i+=2)(0,n[i+1])(t,e,n[i]);eE(e,t,a?n[0]:void 0)}function eQ(e,t){var n=new ee;eY(e,n,eB(t)),et(n,n.g.end()),e=new Uint8Array(n.h);for(var r=(t=n.i).length,a=0,i=0;i<r;i++){var s=t[i];e.set(s,a),a+=s.length}return n.i=[e],e}function eJ(e,t){return{O:e,P:t}}var eZ=eJ(function(e,t,n){if(5!==e.h)return!1;var r=(e=e.g).h[e.g],a=e.h[e.g+1],i=e.h[e.g+2],s=e.h[e.g+3];return e.g+=4,W(e),e=2*((a=(r<<0|a<<8|i<<16|s<<24)>>>0)>>31)+1,r=a>>>23&255,a&=8388607,ef(t,n,255==r?a?NaN:1/0*e:0==r?1401298464324817e-60*e*a:e*Math.pow(2,r-150)*(a+8388608)),!0},function(e,t,n){if(null!=(t=ed(t,n))){Y(e.g,8*n+5),e=e.g;var r=t;0===(r=(n=0>r?1:0)?-r:r)?B=0<1/r?0:2147483648:isNaN(r)?B=2147483647:34028234663852886e22<r?B=(n<<31|2139095040)>>>0:11754943508222875e-54>r?B=(n<<31|(r=Math.round(r/1401298464324817e-60)))>>>0:(t=Math.floor(Math.log(r)/Math.LN2),r*=Math.pow(2,-t),16777216<=(r=Math.round(8388608*r))&&++t,B=(n<<31|t+127<<23|8388607&r)>>>0),n=B,e.g.push(n>>>0&255),e.g.push(n>>>8&255),e.g.push(n>>>16&255),e.g.push(n>>>24&255)}}),e1=eJ(function(e,t,n){if(0!==e.h)return!1;for(var r=e.g,a=128,i=0,s=e=0;4>s&&128<=a;s++)a=r.h[r.g++],W(r),i|=(127&a)<<7*s;if(128<=a&&(a=r.h[r.g++],W(r),i|=(127&a)<<28,e|=(127&a)>>4),128<=a)for(s=0;5>s&&128<=a;s++)a=r.h[r.g++],W(r),e|=(127&a)<<7*s+3;if(!(128>a))throw $();return r=i>>>0,(e=2147483648&(a=e>>>0))&&(a=~a>>>0,0==(r=1+~r>>>0)&&(a=a+1>>>0)),r=4294967296*a+(r>>>0),ef(t,n,e?-r:r),!0},function(e,t,n){if(null!=(t=ed(t,n))&&null!=t){Y(e.g,8*n),e=e.g;var r=t;for(n=0>r,t=(r=Math.abs(r))>>>0,r=Math.floor((r-t)/4294967296)>>>0,n&&(r=~r>>>0,4294967295<(t=1+(~t>>>0))&&(t=0,4294967295<++r&&(r=0))),n=B=t,t=r;0<t||127<n;)e.g.push(127&n|128),n=(n>>>7|t<<25)>>>0,t>>>=7;e.g.push(n)}}),e2=eJ(function(e,t,n){return 0===e.h&&(ef(t,n,q(e.g)),!0)},function(e,t,n){if(null!=(t=ed(t,n))&&null!=t){if(Y(e.g,8*n),e=e.g,0<=(n=t))Y(e,n);else{for(t=0;9>t;t++)e.g.push(127&n|128),n>>=7;e.g.push(1)}}}),e3=eJ(function(e,t,n){if(2!==e.h)return!1;var r,a=q(e.g)>>>0,i=(e=e.g).g;if(e.g+=a,W(e),e=e.h,M)(r=A)||(r=A=new TextDecoder("utf-8",{fatal:!0})),r=r.decode(e.subarray(i,i+a));else{a=i+a;for(var s,o,u,p=[],l=null;i<a;)128>(s=e[i++])?p.push(s):224>s?i>=a?S():(o=e[i++],194>s||128!=(192&o)?(i--,S()):p.push((31&s)<<6|63&o)):240>s?i>=a-1?S():128!=(192&(o=e[i++]))||224===s&&160>o||237===s&&160<=o||128!=(192&(r=e[i++]))?(i--,S()):p.push((15&s)<<12|(63&o)<<6|63&r):244>=s?i>=a-2?S():128!=(192&(o=e[i++]))||0!=o-144+(s<<28)>>30||128!=(192&(r=e[i++]))||128!=(192&(u=e[i++]))?(i--,S()):(s=((7&s)<<18|(63&o)<<12|(63&r)<<6|63&u)-65536,p.push(55296+(s>>10&1023),56320+(1023&s))):S(),8192<=p.length&&(l=_(l,p),p.length=0);r=_(l,p)}return ef(t,n,r),!0},function(e,t,n){if(null!=(t=ed(t,n))){if(I)t=(E||(E=new TextEncoder)).encode(t);else{for(var r=0,a=new Uint8Array(3*t.length),i=0;i<t.length;i++){var s=t.charCodeAt(i);if(128>s)a[r++]=s;else{if(2048>s)a[r++]=s>>6|192;else{if(55296<=s&&57343>=s){if(56319>=s&&i<t.length){var o=t.charCodeAt(++i);if(56320<=o&&57343>=o){s=1024*(s-55296)+o-56320+65536,a[r++]=s>>18|240,a[r++]=s>>12&63|128,a[r++]=s>>6&63|128,a[r++]=63&s|128;continue}i--}s=65533}a[r++]=s>>12|224,a[r++]=s>>6&63|128}a[r++]=63&s|128}}t=a.subarray(0,r)}Y(e.g,8*n+2),Y(e.g,t.length),et(e,e.g.end()),et(e,t)}}),e4=eJ(function(e,t,n,r,a){if(2!==e.h)return!1;t=eb(t,n,r),n=e.g.i,r=q(e.g)>>>0;var i=e.g.g+r,s=i-n;if(0>=s&&(e.g.i=i,a(t,e),s=i-e.g.g),s)throw Error("Message parsing ended unexpectedly. Expected to read "+r+" bytes, instead read "+(r-s)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.g.g=i,e.g.i=n,!0},function(e,t,n,r,a){if(null!=(t=ev(t,r,n)))for(r=0;r<t.length;r++){var i=e;Y(i.g,8*n+2);var s=i.g.end();et(i,s),s.push(i.h),i=s,a(t[r],e),s=e;var o=i.pop();for(o=s.h+s.g.length()-o;127<o;)i.push(127&o|128),o>>>=7,s.h++;i.push(o),s.h++}});function e0(){eO.apply(this,arguments)}if(c(e0,eO),eh){var e6={};Object.defineProperties(e0,(e6[Symbol.hasInstance]=em(Object[Symbol.hasInstance]),e6))}function e5(e){e0.call(this,e)}function e7(){return[1,e2,2,eZ,3,e3,4,e3]}function e9(e){e0.call(this,e,-1,te)}function e8(){return[1,e4,e5,e7]}c(e5,e0),c(e9,e0),e9.prototype.addClassification=function(e,t){return eb(this,1,e5,e,t),this};var te=[1];function tt(e){e0.call(this,e)}function tn(){return[1,eZ,2,eZ,3,eZ,4,eZ,5,eZ]}function tr(e){e0.call(this,e,-1,ti)}function ta(){return[1,e4,tt,tn]}c(tt,e0),c(tr,e0);var ti=[1];function to(e){e0.call(this,e)}function tu(){return[1,eZ,2,eZ,3,eZ,4,eZ,5,eZ,6,e1]}c(to,e0);var tp=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],tl=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],tc=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],th=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],tm=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],td=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],tf=[].concat(i(tp),i(tl),i(tc),i(th),i(tm),i(td));function ty(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function tg(e){return{x:eg(e,1),y:eg(e,2),z:eg(e,3),visibility:null!=ed(e,4)?eg(e,4):void 0}}function tv(e,t){this.h=e,this.g=t,this.l=0}function tb(e,t,n){return function(e,t){var n=e.g;if(void 0===e.o){var r=ty(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),a=ty(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),i=n.createProgram();if(n.attachShader(i,r),n.attachShader(i,a),n.linkProgram(i),!n.getProgramParameter(i,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(i));r=e.o=i,n.useProgram(r),a=n.getUniformLocation(r,"sampler0"),e.j={K:n.getAttribLocation(r,"aVertex"),J:n.getAttribLocation(r,"aTex"),ma:a},e.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.enableVertexAttribArray(e.j.K),n.vertexAttribPointer(e.j.K,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.enableVertexAttribArray(e.j.J),n.vertexAttribPointer(e.j.J,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(a,0)}r=e.j,n.useProgram(e.o),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.h.bindTexture2d(t.glName),n.enableVertexAttribArray(r.K),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.vertexAttribPointer(r.K,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(r.J),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.vertexAttribPointer(r.J,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(r.K),n.disableVertexAttribArray(r.J),n.bindBuffer(n.ARRAY_BUFFER,null),e.h.bindTexture2d(0)}(e,t),"function"==typeof e.g.canvas.transferToImageBitmap?Promise.resolve(e.g.canvas.transferToImageBitmap()):n?Promise.resolve(e.g.canvas):"function"==typeof createImageBitmap?createImageBitmap(e.g.canvas):(void 0===e.i&&(e.i=document.createElement("canvas")),new Promise(function(t){e.i.height=e.g.canvas.height,e.i.width=e.g.canvas.width,e.i.getContext("2d",{}).drawImage(e.g.canvas,0,0,e.g.canvas.width,e.g.canvas.height),t(e.i)}))}function tx(e){this.g=e}var tN=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function tT(e,t){return t+e}function tw(e){if(this.g=e,this.listeners={},this.j={},this.H={},this.o={},this.u={},this.I=this.s=this.Z=!0,this.D=Promise.resolve(),this.Y="",this.C={},this.locateFile=e&&e.locateFile||tT,"object"==typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"==typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.$=t,e.options)for(var n=(t=a(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var r=e.options[n].default;void 0!==r&&(this.j[n]="function"==typeof r?r():r)}}function tS(e,t){var n;return x(function(r){return t in e.H?r.return(e.H[t]):(n=fetch(e.locateFile(t,"")).then(function(e){return e.arrayBuffer()}),e.H[t]=n,r.return(n))})}function t_(e){var t=this;e=e||{};var n={url:"face_detection_short.binarypb"},r={type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}};this.g=new tw({locateFile:e.locateFile,files:[{data:!0,url:"face_detection_short.binarypb"},{data:!0,url:"face_detection_short_range.tflite"},{simd:!0,url:"face_detection_solution_simd_wasm_bin.js"},{simd:!1,url:"face_detection_solution_wasm_bin.js"}],graph:n,listeners:[{wants:["detections","image_transformed"],outs:{image:"image_transformed",detections:{type:"detection_list",stream:"detections"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"==typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},model:{type:0,onChange:function(e){var i,s,o,u,p;return x(function(l){switch(l.g){case 1:s=(i=a("short"===e?["face_detection_short_range.tflite"]:["face_detection_full_range_sparse.tflite"])).next();case 2:if(s.done){l.g=4;break}return u="third_party/mediapipe/modules/face_detection/"+(o=s.value),f(l,tS(t.g,o),5);case 5:p=l.h,t.g.overrideFile(u,p),s=i.next(),l.g=2;break;case 4:return n.url="short"===e?"face_detection_short.binarypb":"face_detection_full.binarypb",r.graphOptionXref.calculatorName="short"===e?"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator":"facedetectionfullrangegpu__facedetectionfullrangecommon__TensorsToDetectionsCalculator",l.return(!0)}})}},minDetectionConfidence:r}})}(s=tw.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},s.reset=function(){var e=this;return x(function(t){e.i&&(e.i.reset(),e.o={},e.u={}),t.g=0})},s.setOptions=function(e,t){var n=this;if(t=t||this.g.options){for(var r=[],i=[],s={},o=a(Object.keys(e)),u=o.next();!u.done;s={R:s.R,S:s.S},u=o.next()){var p=u.value;p in this.j&&this.j[p]===e[p]||(this.j[p]=e[p],void 0!==(u=t[p])&&(u.onChange&&(s.R=u.onChange,s.S=e[p],r.push(function(e){return function(){return x(function(t){if(1==t.g)return f(t,e.R(e.S),2);!0===t.h&&(n.s=!0),t.g=0})}}(s))),u.graphOptionXref&&(p={valueNumber:1===u.type?e[p]:0,valueBoolean:0===u.type&&e[p],valueString:2===u.type?e[p]:""},u=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),u.graphOptionXref),p),i.push(u))))}0===r.length&&0===i.length||(this.s=!0,this.B=(void 0===this.B?[]:this.B).concat(i),this.A=(void 0===this.A?[]:this.A).concat(r))}},s.initialize=function(){var e=this;return x(function(t){var n,r,s,o,u,p,l,c,h,m,d,y,g,v,b,N,T,w,S,_,O,A,E,M;return 1==t.g?f(t,x(function(t){switch(t.g){case 1:return e.Z?(n=void 0===e.g.files?[]:"function"==typeof e.g.files?e.g.files(e.j):e.g.files,f(t,x(function(e){switch(e.g){case 1:return e.o=2,f(e,WebAssembly.instantiate(tN),4);case 4:e.g=3,e.o=0;break;case 2:return e.o=0,e.j=null,e.return(!1);case 3:return e.return(!0)}}),2)):t.return();case 2:if(r=t.h,"object"==typeof window){var a,y;return a={locateFile:e.locateFile},window.createMediapipeSolutionsWasm=a,y={locateFile:e.locateFile},window.createMediapipeSolutionsPackedAssets=y,p=n.filter(function(e){return void 0!==e.data}),l=n.filter(function(e){return void 0===e.data}),c=Promise.all(p.map(function(t){var n=tS(e,t.url);if(void 0!==t.path){var r=t.path;n=n.then(function(t){return e.overrideFile(r,t),Promise.resolve(t)})}return n})),h=Promise.all(l.map(function(t){var n,a;return void 0===t.simd||t.simd&&r||!t.simd&&!r?(n=e.locateFile(t.url,e.$),(a=document.createElement("script")).setAttribute("src",n),a.setAttribute("crossorigin","anonymous"),new Promise(function(e){a.addEventListener("load",function(){e()},!1),a.addEventListener("error",function(){e()},!1),document.body.appendChild(a)})):Promise.resolve()})).then(function(){var t,n,r;return x(function(a){if(1==a.g)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,r=e,f(a,t(n),2);r.h=a.h,a.g=0})}),m=x(function(t){return e.g.graph&&e.g.graph.url?t=f(t,tS(e,e.g.graph.url),0):(t.g=0,t=void 0),t}),f(t,Promise.all([h,c,m]),7)}if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return s=n.filter(function(e){return void 0===e.simd||e.simd&&r||!e.simd&&!r}).map(function(t){return e.locateFile(t.url,e.$)}),importScripts.apply(null,i(s)),o=e,f(t,createMediapipeSolutionsWasm(Module),6);case 6:o.h=t.h,e.l=new OffscreenCanvas(1,1),e.h.canvas=e.l,u=e.h.GL.createContext(e.l,{antialias:!1,alpha:!1,ja:"undefined"!=typeof WebGL2RenderingContext?2:1}),e.h.GL.makeContextCurrent(u),t.g=4;break;case 7:if(e.l=document.createElement("canvas"),!(d=e.l.getContext("webgl2",{}))&&!(d=e.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),t.return();e.G=d,e.h.canvas=e.l,e.h.createContext(e.l,!0,!0,{});case 4:e.i=new e.h.SolutionWasm,e.Z=!1,t.g=0}}),2):3!=t.g?f(t,x(function(t){if(1==t.g)return e.g.graph&&e.g.graph.url&&e.Y===e.g.graph.url?t.return():(e.s=!0,e.g.graph&&e.g.graph.url?(e.Y=e.g.graph.url,f(t,tS(e,e.g.graph.url),3)):void(t.g=2));for(2!=t.g&&(y=t.h,e.i.loadGraph(y)),v=(g=a(Object.keys(e.C))).next();!v.done;v=g.next())b=v.value,e.i.overrideFile(b,e.C[b]);if(e.C={},e.g.listeners)for(T=(N=a(e.g.listeners)).next();!T.done;T=N.next())(function(e,t){for(var n=t.name||"$",r=[].concat(i(t.wants)),s=new e.h.StringList,o=a(t.wants),u=o.next();!u.done;u=o.next())s.push_back(u.value);o=e.h.PacketListener.implement({onResults:function(i){for(var s,o,u,p,l,c,h,m,d,y,g,v,b,N,T={},w=0;w<t.wants.length;++w)T[r[w]]=i.get(w);var S=e.listeners[n];S&&(e.D=(s=t.outs,x(function(t){switch(t.g){case 1:if(!s)return t.return(T);for(o={},u=0,l=(p=a(Object.keys(s))).next();!l.done;l=p.next())"string"!=typeof(c=s[l.value])&&"texture"===c.type&&void 0!==T[c.stream]&&++u;1<u&&(e.I=!1),l=(h=a(Object.keys(s))).next();case 2:if(l.done){t.g=4;break}if("string"==typeof(d=s[m=l.value])){var n,r,i;return b=o,N=m,f(t,(n=m,r=T[d],x(function(t){return"number"==typeof r||r instanceof Uint8Array||r instanceof e.h.Uint8BlobList?t.return(r):r instanceof e.h.Texture2dDataOut?((i=e.u[n])||(i=new tv(e.h,e.G),e.u[n]=i),t.return(tb(i,r,e.I))):t.return(void 0)})),14)}if(y=T[d.stream],"detection_list"===d.type){if(y){for(var w=y.getRectList(),S=y.getLandmarksList(),_=y.getClassificationsList(),O=[],A=0;A<w.size();++A){var E=eX(w.get(A),to,tu);E={boundingBox:{xCenter:eg(E,1),yCenter:eg(E,2),height:eg(E,3),width:eg(E,4),rotation:eg(E,5,0),rectId:ex(E,6)},landmarks:ev(eX(S.get(A),tr,ta),tt,1).map(tg),V:ev(eX(_.get(A),e9,e8),e5,1).map(function(e){return{index:ex(e,1),ga:eg(e,2),label:null!=ed(e,3)?eN(e,3):void 0,displayName:null!=ed(e,4)?eN(e,4):void 0}})},O.push(E)}w=O}else w=[];o[m]=w,t.g=7;break}if("proto_list"===d.type){if(y){for(w=Array(y.size()),S=0;S<y.size();S++)w[S]=y.get(S);y.delete()}else w=[];o[m]=w,t.g=7;break}if(void 0===y){t.g=3;break}if("float_list"===d.type||"proto"===d.type){o[m]=y,t.g=7;break}if("texture"!==d.type)throw Error("Unknown output config type: '"+d.type+"'");return(g=e.u[m])||(g=new tv(e.h,e.G),e.u[m]=g),f(t,tb(g,y,e.I),13);case 13:v=t.h,o[m]=v;case 7:d.transform&&o[m]&&(o[m]=d.transform(o[m])),t.g=3;break;case 14:b[N]=t.h;case 3:l=h.next(),t.g=2;break;case 4:return t.return(o)}})).then(function(n){n=S(n);for(var a=0;a<t.wants.length;++a){var i=T[r[a]];"object"==typeof i&&i.hasOwnProperty&&i.hasOwnProperty("delete")&&i.delete()}n&&(e.D=n)}))}}),e.i.attachMultiListener(s,o),s.delete()})(e,T.value);w=e.j,e.j={},e.setOptions(w),t.g=0}),3):f(t,x(function(t){switch(t.g){case 1:if(!e.s)return t.return();if(!e.A){t.g=2;break}_=(S=a(e.A)).next();case 3:if(_.done){t.g=5;break}return f(t,(0,_.value)(),4);case 4:_=S.next(),t.g=3;break;case 5:e.A=void 0;case 2:if(e.B){for(O=new e.h.GraphOptionChangeRequestList,E=(A=a(e.B)).next();!E.done;E=A.next())M=E.value,O.push_back(M);e.i.changeOptions(O),O.delete(),e.B=void 0}e.s=!1,t.g=0}}),0)})},s.overrideFile=function(e,t){this.i?this.i.overrideFile(e,t):this.C[e]=t},s.clearOverriddenFiles=function(){this.C={},this.i&&this.i.clearOverriddenFiles()},s.send=function(e,t){var n,r,i,s,o,u,p,l,c,h=this;return x(function(m){switch(m.g){case 1:return h.g.inputs?(n=1e3*(null==t?performance.now():t),f(m,h.D,2)):m.return();case 2:return f(m,h.initialize(),3);case 3:for(r=new h.h.PacketDataList,s=(i=a(Object.keys(e))).next();!s.done;s=i.next())if(o=s.value,u=h.g.inputs[o]){t:{var d=e[o];switch(u.type){case"video":var y=h.o[u.stream];if(y||(y=new tv(h.h,h.G),h.o[u.stream]=y),0===y.l&&(y.l=y.h.createTexture()),"undefined"!=typeof HTMLVideoElement&&d instanceof HTMLVideoElement)var g=d.videoWidth,v=d.videoHeight;else"undefined"!=typeof HTMLImageElement&&d instanceof HTMLImageElement?(g=d.naturalWidth,v=d.naturalHeight):(g=d.width,v=d.height);v={glName:y.l,width:g,height:v},(g=y.g).canvas.width=v.width,g.canvas.height=v.height,g.activeTexture(g.TEXTURE0),y.h.bindTexture2d(y.l),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,d),y.h.bindTexture2d(0),y=v;break t;case"detections":for((y=h.o[u.stream])||(y=new tx(h.h),h.o[u.stream]=y),y.data||(y.data=new y.g.DetectionListData),y.data.reset(d.length),v=0;v<d.length;++v){g=d[v];var b=y.data,x=b.setBoundingBox,N=v,T=g.boundingBox,w=new to;if(ef(w,1,T.xCenter),ef(w,2,T.yCenter),ef(w,3,T.height),ef(w,4,T.width),ef(w,5,T.rotation),ef(w,6,T.rectId),T=eQ(w,tu),x.call(b,N,T),g.landmarks)for(b=0;b<g.landmarks.length;++b){var S=!!(w=g.landmarks[b]).visibility;N=(x=y.data).addNormalizedLandmark,T=v,w=Object.assign(Object.assign({},w),{visibility:S?w.visibility:0}),ef(S=new tt,1,w.x),ef(S,2,w.y),ef(S,3,w.z),w.visibility&&ef(S,4,w.visibility),w=eQ(S,tn),N.call(x,T,w)}if(g.V)for(b=0;b<g.V.length;++b)N=(x=y.data).addClassification,T=v,w=g.V[b],ef(S=new e5,2,w.ga),w.index&&ef(S,1,w.index),w.label&&ef(S,3,w.label),w.displayName&&ef(S,4,w.displayName),w=eQ(S,e7),N.call(x,T,w)}y=y.data;break t;default:y={}}}switch(p=y,l=u.stream,u.type){case"video":r.pushTexture2d(Object.assign(Object.assign({},p),{stream:l,timestamp:n}));break;case"detections":(c=p).stream=l,c.timestamp=n,r.pushDetectionList(c);break;default:throw Error("Unknown input config type: '"+u.type+"'")}}return h.i.send(r),f(m,h.D,4);case 4:r.delete(),m.g=0}})},s.onResults=function(e,t){this.listeners[t||"$"]=e},w("Solution",tw),w("OptionType",{BOOL:0,NUMBER:1,ia:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(s=t_.prototype).close=function(){return this.g.close(),Promise.resolve()},s.onResults=function(e){this.g.onResults(e)},s.initialize=function(){var e=this;return x(function(t){return f(t,e.g.initialize(),0)})},s.reset=function(){this.g.reset()},s.send=function(e){var t=this;return x(function(n){return f(n,t.g.send(e),0)})},s.setOptions=function(e){this.g.setOptions(e)},w("FaceDetection",t_),w("FACEDETECTION_LIPS",tp),w("FACEDETECTION_LEFT_EYE",tl),w("FACEDETECTION_LEFT_EYEBROW",tc),w("FACEDETECTION_RIGHT_EYE",th),w("FACEDETECTION_RIGHT_EYEBROW",tm),w("FACEDETECTION_FACE_OVAL",td),w("FACEDETECTION_CONTOURS",tf),w("FACEDETECTION_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),w("VERSION","0.4.1646425229")}).call(ts);var tu=function(){return(tu=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function tp(e,t,n,r){return new(n||(n=Promise))(function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?a(e.value):((t=e.value)instanceof n?t:new n(function(e){e(t)})).then(s,o)}u((r=r.apply(e,t||[])).next())})}function tl(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((a=(a=s.trys).length>0&&a[a.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}var tc=["rightEye","leftEye","noseTip","mouthCenter","rightEarTragion","leftEarTragion"],th={modelType:"short",runtime:"mediapipe",maxFaces:1},tm=function(){function e(e){var t=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceDetectorSolution=new to.FaceDetection({locateFile:function(t,n){if(e.solutionPath){var r=e.solutionPath.replace(/\/+$/,"");return"".concat(r,"/").concat(t)}return"".concat(n,"/").concat(t)}}),this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode,model:e.modelType}),this.faceDetectorSolution.onResults(function(e){if(t.height=e.image.height,t.width=e.image.width,t.faces=[],null!==e.detections)for(var n,r,a,i=0,s=e.detections;i<s.length;i++){var o=s[i];t.faces.push(t.normalizedToAbsolute(o.landmarks,{xMin:r=(n=o.boundingBox).xCenter-n.width/2,xMax:r+n.width,yMin:a=n.yCenter-n.height/2,yMax:a+n.height,width:n.width,height:n.height}))}})}return e.prototype.normalizedToAbsolute=function(e,t){var n=this;return{keypoints:e.map(function(e,t){return{x:e.x*n.width,y:e.y*n.height,name:tc[t]}}),box:{xMin:t.xMin*this.width,yMin:t.yMin*this.height,xMax:t.xMax*this.width,yMax:t.yMax*this.height,width:t.width*this.width,height:t.height*this.height}}},e.prototype.estimateFaces=function(e,t){return tp(this,void 0,void 0,function(){var n,r;return tl(this,function(a){switch(a.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode})),e instanceof S.Tensor?(r=ImageData.bind,[4,S.browser.toPixels(e)]):[3,2];case 1:return n=new(r.apply(ImageData,[void 0,a.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:n=e,a.label=3;case 3:return e=n,[4,this.faceDetectorSolution.send({image:e})];case 4:return a.sent(),[2,this.faces]}})})},e.prototype.dispose=function(){this.faceDetectorSolution.close()},e.prototype.reset=function(){this.faceDetectorSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},e.prototype.initialize=function(){return this.faceDetectorSolution.initialize()},e}();function td(e){return e instanceof S.Tensor?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function tf(e){return e instanceof S.Tensor?e:S.browser.fromPixels(e)}function ty(e,t){S.util.assert(0!==e.width,function(){return"".concat(t," width cannot be 0.")}),S.util.assert(0!==e.height,function(){return"".concat(t," height cannot be 0.")})}function tg(e){null==e.reduceBoxesInLowestLayer&&(e.reduceBoxesInLowestLayer=!1),null==e.interpolatedScaleAspectRatio&&(e.interpolatedScaleAspectRatio=1),null==e.fixedAnchorSize&&(e.fixedAnchorSize=!1);for(var t=[],n=0;n<e.numLayers;){for(var r=[],a=[],i=[],s=[],o=n;o<e.strides.length&&e.strides[o]===e.strides[n];){var u=tv(e.minScale,e.maxScale,o,e.strides.length);if(0===o&&e.reduceBoxesInLowestLayer)i.push(1),i.push(2),i.push(.5),s.push(.1),s.push(u),s.push(u);else{for(var p=0;p<e.aspectRatios.length;++p)i.push(e.aspectRatios[p]),s.push(u);if(e.interpolatedScaleAspectRatio>0){var l=o===e.strides.length-1?1:tv(e.minScale,e.maxScale,o+1,e.strides.length);s.push(Math.sqrt(u*l)),i.push(e.interpolatedScaleAspectRatio)}}o++}for(var c=0;c<i.length;++c){var h=Math.sqrt(i[c]);r.push(s[c]/h),a.push(s[c]*h)}var m=0,d=0;if(e.featureMapHeight.length>0)m=e.featureMapHeight[n],d=e.featureMapWidth[n];else{var f=e.strides[n];m=Math.ceil(e.inputSizeHeight/f),d=Math.ceil(e.inputSizeWidth/f)}for(var y=0;y<m;++y)for(var g=0;g<d;++g)for(var v=0;v<r.length;++v){var b={xCenter:(g+e.anchorOffsetX)/d,yCenter:(y+e.anchorOffsetY)/m,width:0,height:0};e.fixedAnchorSize?(b.width=1,b.height=1):(b.width=a[v],b.height=r[v]),t.push(b)}n=o}return t}function tv(e,t,n,r){return 1===r?.5*(e+t):e+(t-e)*n/(r-1)}function tb(e,t){var n=t[0],r=t[1];return[n*e[0]+r*e[1]+e[3],n*e[4]+r*e[5]+e[7]]}var tx,tN,tT,tw,tS,t_,tO={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:4,minScale:.1484375,maxScale:.75,inputSizeHeight:128,inputSizeWidth:128,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,16,16],aspectRatios:[1],fixedAnchorSize:!0},tA={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:0,featureMapHeight:[],featureMapWidth:[],numLayers:1,minScale:.1484375,maxScale:.75,inputSizeHeight:192,inputSizeWidth:192,anchorOffsetX:.5,anchorOffsetY:.5,strides:[4],aspectRatios:[1],fixedAnchorSize:!0},tE={runtime:"tfjs",modelType:"short",maxFaces:1,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"},tM={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:896,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:128,yScale:128,hScale:128,wScale:128,minScoreThresh:.5},tI={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2304,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:192,yScale:192,hScale:192,wScale:192,minScoreThresh:.6},tk={outputTensorSize:{width:128,height:128},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},tF={outputTensorSize:{width:192,height:192},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},tC=function(){function e(e,t,n){this.detectorModel=t,this.maxFaces=n,"full"===e?(this.imageToTensorConfig=tF,this.tensorsToDetectionConfig=tI,this.anchors=tg(tA)):(this.imageToTensorConfig=tk,this.tensorsToDetectionConfig=tM,this.anchors=tg(tO));var r=(0,S.tensor1d)(this.anchors.map(function(e){return e.width})),a=(0,S.tensor1d)(this.anchors.map(function(e){return e.height})),i=(0,S.tensor1d)(this.anchors.map(function(e){return e.xCenter})),s=(0,S.tensor1d)(this.anchors.map(function(e){return e.yCenter}));this.anchorTensor={x:i,y:s,w:r,h:a}}return e.prototype.dispose=function(){this.detectorModel.dispose(),(0,S.dispose)([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},e.prototype.reset=function(){},e.prototype.detectFaces=function(e,t){return void 0===t&&(t=!1),tp(this,void 0,void 0,function(){var n,r,a,i,s,o,u,p,l,c;return tl(this,function(h){var m,d,f,y,g,v,b,x,N,T,w,_,O,A,E,M,I,k,F,C,D,L,R,j,z,V;switch(h.label){case 0:return null==e?(this.reset(),[2,[]]):(m=n=(0,S.tidy)(function(){var n=(0,S.cast)(tf(e),"float32");return t&&(n=(0,S.squeeze)(S.image.flipLeftRight((0,S.expandDims)(n,0)),[0])),n}),E=(d=this.imageToTensorConfig).outputTensorSize,M=d.keepAspectRatio,I=d.borderMode,k=d.outputTensorFloatRange,D=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var r=t.height,a=t.width;ty(t,"targetSize"),ty(e,"roi");var i,s,o=r/a,u=e.height/e.width,p=0,l=0;return o>u?(i=e.width,s=e.width*o,l=(1-u/o)/2):(i=e.height/o,s=e.height,p=(1-o/u)/2),e.width=i,e.height=s,{top:l,left:p,right:p,bottom:l}}(C={xCenter:.5*(f=F=td(m)).width,yCenter:.5*f.height,width:f.width,height:f.height,rotation:0},E,M),y=F.width,g=F.height,v=C.width,b=C.height,x=Math.cos(C.rotation),N=Math.sin(C.rotation),T=C.xCenter,w=C.yCenter,_=1/y,O=1/g,(A=Array(16))[0]=v*x*1*_,A[1]=-b*N*_,A[2]=0,A[3]=(-.5*v*x*1+.5*b*N+T)*_,A[4]=v*N*1*O,A[5]=b*x*O,A[6]=0,A[7]=(-.5*b*x-.5*v*N*1+w)*O,A[8]=0,A[9]=0,A[10]=v*_,A[11]=0,A[12]=0,A[13]=0,A[14]=0,A[15]=1,L=function(e){if(16!==e.length)throw Error("Array length must be 16 but got ".concat(e.length));return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}(A),a=(r={imageTensor:(0,S.tidy)(function(){var e,t,n,r=tf(m),a=(0,S.tensor2d)((ty(E,"inputResolution"),[1/E.width*L[0][0]*F.width,1/E.height*L[0][1]*F.width,L[0][3]*F.width,1/E.width*L[1][0]*F.height,1/E.height*L[1][1]*F.height,L[1][3]*F.height,0,0]),[1,8]),i=S.image.transform((0,S.expandDims)((0,S.cast)(r,"float32")),a,"bilinear","zero"===I?"constant":"nearest",0,[E.height,E.width]);return null!=k?(e=k[0],n={scale:t=(k[1]-e)/255,offset:e-0*t},(0,S.tidy)(function(){return(0,S.add)((0,S.mul)(i,n.scale),n.offset)})):i}),padding:D,transformationMatrix:L}).imageTensor,i=r.transformationMatrix,R=s=this.detectorModel.execute(a,"Identity:0"),u=(o=(0,S.tidy)(function(){var e=(0,S.tidy)(function(){return[(0,S.slice)(R,[0,0,0],[1,-1,1]),(0,S.slice)(R,[0,0,1],[1,-1,-1])]}),t=e[0],n=e[1];return{boxes:(0,S.squeeze)(n),logits:(0,S.squeeze)(t)}})).boxes,[4,function(e,t,n){return tp(this,void 0,void 0,function(){var r,a,i,s;return tl(this,function(o){switch(o.label){case 0:var u;return r=e[0],u=e[1],a=(0,S.tidy)(function(){n.reverseOutputOrder?(r=(0,S.squeeze)((0,S.slice)(u,[0,n.boxCoordOffset+0],[-1,1])),e=(0,S.squeeze)((0,S.slice)(u,[0,n.boxCoordOffset+1],[-1,1])),i=(0,S.squeeze)((0,S.slice)(u,[0,n.boxCoordOffset+2],[-1,1])),a=(0,S.squeeze)((0,S.slice)(u,[0,n.boxCoordOffset+3],[-1,1]))):(e=(0,S.squeeze)((0,S.slice)(u,[0,n.boxCoordOffset+0],[-1,1])),r=(0,S.squeeze)((0,S.slice)(u,[0,n.boxCoordOffset+1],[-1,1])),a=(0,S.squeeze)((0,S.slice)(u,[0,n.boxCoordOffset+2],[-1,1])),i=(0,S.squeeze)((0,S.slice)(u,[0,n.boxCoordOffset+3],[-1,1]))),r=(0,S.add)((0,S.mul)((0,S.div)(r,n.xScale),t.w),t.x),e=(0,S.add)((0,S.mul)((0,S.div)(e,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(a=(0,S.mul)((0,S.exp)((0,S.div)(a,n.hScale)),t.h),i=(0,S.mul)((0,S.exp)((0,S.div)(i,n.wScale)),t.w)):(a=(0,S.mul)((0,S.div)(a,n.hScale),t.h),i=(0,S.mul)((0,S.div)(i,n.wScale),t.h));var e,r,a,i,s=(0,S.sub)(e,(0,S.div)(a,2)),o=(0,S.sub)(r,(0,S.div)(i,2)),p=(0,S.add)(e,(0,S.div)(a,2)),l=(0,S.add)(r,(0,S.div)(i,2)),c=(0,S.concat)([(0,S.reshape)(s,[n.numBoxes,1]),(0,S.reshape)(o,[n.numBoxes,1]),(0,S.reshape)(p,[n.numBoxes,1]),(0,S.reshape)(l,[n.numBoxes,1])],1);if(n.numKeypoints)for(var h=0;h<n.numKeypoints;++h){var m=n.keypointCoordOffset+h*n.numValuesPerKeypoint,d=void 0,f=void 0;n.reverseOutputOrder?(d=(0,S.squeeze)((0,S.slice)(u,[0,m],[-1,1])),f=(0,S.squeeze)((0,S.slice)(u,[0,m+1],[-1,1]))):(f=(0,S.squeeze)((0,S.slice)(u,[0,m],[-1,1])),d=(0,S.squeeze)((0,S.slice)(u,[0,m+1],[-1,1])));var y=(0,S.add)((0,S.mul)((0,S.div)(d,n.xScale),t.w),t.x),g=(0,S.add)((0,S.mul)((0,S.div)(f,n.yScale),t.h),t.y);c=(0,S.concat)([c,(0,S.reshape)(y,[n.numBoxes,1]),(0,S.reshape)(g,[n.numBoxes,1])],1)}return c}),i=(0,S.tidy)(function(){var e=r;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=(0,S.clipByValue)(r,-n.scoreClippingThresh,n.scoreClippingThresh)),e=(0,S.sigmoid)(e)):e}),[4,function(e,t,n){return tp(this,void 0,void 0,function(){var r,a,i,s,o,u,p,l,c,h,m,d;return tl(this,function(f){switch(f.label){case 0:return r=[],[4,e.data()];case 1:return a=f.sent(),[4,t.data()];case 2:for(i=f.sent(),s=0;s<n.numBoxes;++s){var y,g,v,b,x,N;if(!(null!=n.minScoreThresh&&i[s]<n.minScoreThresh||(p=(y=a[(o=s*n.numCoords)+0],g=a[o+1],v=a[o+2],b=a[o+3],x=i[s],N=n.flipVertically,u={score:[x],ind:s,locationData:{relativeBoundingBox:{xMin:g,yMin:N?1-v:y,xMax:b,yMax:N?1-y:v,width:b-g,height:v-y}}}).locationData.relativeBoundingBox).width<0||p.height<0)){if(n.numKeypoints>0)for((l=u.locationData).relativeKeypoints=[],c=n.numKeypoints*n.numValuesPerKeypoint,h=0;h<c;h+=n.numValuesPerKeypoint)d={x:a[(m=o+n.keypointCoordOffset+h)+0],y:n.flipVertically?1-a[m+1]:a[m+1]},l.relativeKeypoints.push(d);r.push(u)}}return[2,r]}})})}(a,i,n)];case 1:return s=o.sent(),(0,S.dispose)([a,i]),[2,s]}})})}([p=o.logits,u],this.anchorTensor,this.tensorsToDetectionConfig)]);case 1:return 0===(l=h.sent()).length?((0,S.dispose)([n,a,s,p,u]),[2,l]):[4,function(e,t,n,r){return tp(this,void 0,void 0,function(){var n,r,a,i,s;return tl(this,function(o){switch(o.label){case 0:return e.sort(function(e,t){return Math.max.apply(Math,t.score)-Math.max.apply(Math,e.score)}),n=(0,S.tensor2d)(e.map(function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]})),r=(0,S.tensor1d)(e.map(function(e){return e.score[0]})),[4,S.image.nonMaxSuppressionAsync(n,r,t,.3)];case 1:return[4,(a=o.sent()).array()];case 2:return i=o.sent(),s=e.filter(function(e,t){return i.indexOf(t)>-1}),(0,S.dispose)([n,r,a]),[2,s]}})})}(l,this.maxFaces,0)];case 2:return j=h.sent(),z=i,void 0===j&&(j=[]),V=[].concat.apply([],z),j.forEach(function(e){var t=e.locationData;t.relativeKeypoints.forEach(function(e){var t=tb(V,[e.x,e.y]),n=t[0],r=t[1];e.x=n,e.y=r});var n=t.relativeBoundingBox,r=Number.MAX_VALUE,a=Number.MAX_VALUE,i=Number.MIN_VALUE,s=Number.MIN_VALUE;[[n.xMin,n.yMin],[n.xMin+n.width,n.yMin],[n.xMin+n.width,n.yMin+n.height],[n.xMin,n.yMin+n.height]].forEach(function(e){var t=tb(V,e),n=t[0],o=t[1];r=Math.min(r,n),i=Math.max(i,n),a=Math.min(a,o),s=Math.max(s,o)}),t.relativeBoundingBox={xMin:r,xMax:i,yMin:a,yMax:s,width:i-r,height:s-a}}),c=j,(0,S.dispose)([n,a,s,p,u]),[2,c]}})})},e.prototype.estimateFaces=function(e,t){return tp(this,void 0,void 0,function(){var n,r;return tl(this,function(a){return n=td(e),r=!!t&&t.flipHorizontal,[2,this.detectFaces(e,r).then(function(e){return e.map(function(e){for(var t=e.locationData.relativeKeypoints.map(function(e,t){return tu(tu({},e),{x:e.x*n.width,y:e.y*n.height,name:tc[t]})}),r=e.locationData.relativeBoundingBox,a=0,i=["width","xMax","xMin"];a<i.length;a++)r[i[a]]*=n.width;for(var s=0,o=["height","yMax","yMin"];s<o.length;s++)r[o[s]]*=n.height;return{keypoints:t,box:r}})})]})})},e}();function tD(e){return e.width*e.height}function tL(e){var t=e.xCenter-e.width/2,n=t+e.width,r=e.yCenter-e.height/2;return{xMin:t,xMax:n,yMin:r,yMax:r+e.height,width:e.width,height:e.height}}function tR(e){return e instanceof S.Tensor?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function tj(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function tz(e){return e instanceof S.Tensor?e:S.browser.fromPixels(e)}function tV(e,t){S.util.assert(0!==e.width,function(){return t+" width cannot be 0."}),S.util.assert(0!==e.height,function(){return t+" height cannot be 0."})}function tP(e){return{xCenter:e.xMin+e.width/2,yCenter:e.yMin+e.height/2,width:e.width,height:e.height}}function tB(e){var t=e.relativeKeypoints;if(t.length<=1)throw Error("2 or more keypoints required to calculate a rect.");var n=Number.MAX_VALUE,r=Number.MAX_VALUE,a=Number.MIN_VALUE,i=Number.MIN_VALUE;return t.forEach(function(e){n=Math.min(n,e.x),a=Math.max(a,e.x),r=Math.min(r,e.y),i=Math.max(i,e.y)}),{xCenter:(n+a)/2,yCenter:(r+i)/2,width:a-n,height:i-r}}function tU(e,t,n,r,a){var i,s,o,u,p,l,c,h,m="rect"===n?function(e,t,n){var r,a=e.locationData;if("boundingbox"===t)r=tP(a.boundingBox);else{r=tB(a);var i=n.width,s=n.height;r.xCenter=Math.round(r.xCenter*i),r.yCenter=Math.round(r.yCenter*s),r.width=Math.round(r.width*i),r.height=Math.round(r.height*s)}return r}(e,t,r):(i=e.locationData,"boundingbox"===t?tP(i.relativeBoundingBox):tB(i));return a&&(m.rotation=(o=e.locationData,u=a.rotationVectorStartKeypointIndex,p=a.rotationVectorEndKeypointIndex,s=a.rotationVectorTargetAngle?a.rotationVectorTargetAngle:Math.PI*a.rotationVectorTargetAngleDegree/180,l=o.relativeKeypoints[u].x*r.width,c=o.relativeKeypoints[u].y*r.height,h=o.relativeKeypoints[p].x*r.width,tj(s-Math.atan2(-(o.relativeKeypoints[p].y*r.height-c),h-l)))),m}function t$(e,t,n,r){return e7(this,void 0,void 0,function(){var a,i,s,o,u,p,l;return e9(this,function(c){switch(c.label){case 0:return n=n||t.flipHorizontally||!1,r=r||t.flipVertically||!1,a=e.size/t.numLandmarks,[4,e.data()];case 1:for(i=c.sent(),s=[],o=0;o<t.numLandmarks;++o){var h,m;u=o*a,(l={x:0,y:0}).x=n?t.inputImageWidth-i[u]:i[u],a>1&&(l.y=r?t.inputImageHeight-i[u+1]:i[u+1]),a>2&&(l.z=i[u+2]),a>3&&(l.score=(h=t.visibilityActivation,m=i[u+3],"none"===h?m:1/(1+Math.exp(-m)))),s.push(l)}for(p=0;p<s.length;++p)(l=s[p]).x=l.x/t.inputImageWidth,l.y=l.y/t.inputImageHeight,l.z=l.z/t.inputImageWidth/(t.normalizeZ||1);return[2,s]}})})}function tH(e,t,n){var r,a=e.width,i=e.height,s=e.rotation;if(null==n.rotation&&null==n.rotationDegree||(r=s,null!=n.rotation?r+=n.rotation:null!=n.rotationDegree&&(r+=Math.PI*n.rotationDegree/180),s=tj(r)),0===s)e.xCenter=e.xCenter+a*n.shiftX,e.yCenter=e.yCenter+i*n.shiftY;else{var o=(t.width*a*n.shiftX*Math.cos(s)-t.height*i*n.shiftY*Math.sin(s))/t.width,u=(t.width*a*n.shiftX*Math.sin(s)+t.height*i*n.shiftY*Math.cos(s))/t.height;e.xCenter=e.xCenter+o,e.yCenter=e.yCenter+u}if(n.squareLong){var p=Math.max(a*t.width,i*t.height);a=p/t.width,i=p/t.height}else if(n.squareShort){var l=Math.min(a*t.width,i*t.height);a=l/t.width,i=l/t.height}return e.width=a*n.scaleX,e.height=i*n.scaleY,e}(t_||(t_={})).MediaPipeFaceDetector="MediaPipeFaceDetector";var tG,tW={runtime:"tfjs",maxFaces:1,refineLandmarks:!1,landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/face_mesh/1"},tq={flipHorizontal:!1,staticImageMode:!1},tK={shiftX:0,shiftY:0,scaleX:1.5,scaleY:1.5,squareLong:!0},tX={outputTensorSize:{width:192,height:192},outputTensorFloatRange:[0,1],borderMode:"replicate"},tY={numLandmarks:468,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},tQ={numLandmarks:80,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},tJ={numLandmarks:71,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},tZ={numLandmarks:5,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},t1={indexesMapping:Array.from(Array(468).keys()),zRefinement:"copy"},t2={indexesMapping:[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407],zRefinement:"none"},t3={indexesMapping:[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],zRefinement:"none"},t4={indexesMapping:[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417],zRefinement:"none"},t0={indexesMapping:[468,469,470,471,472],zRefinement:[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173]},t6={indexesMapping:[473,474,475,476,477],zRefinement:[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398]},t5=function(){function e(e,t,n,r){this.detector=e,this.landmarkModel=t,this.maxFaces=n,this.withAttention=r,this.prevFaceRectsFromLandmarks=null}return e.prototype.estimateFaces=function(e,t){return e7(this,void 0,void 0,function(){var n,r,a,i,s,o,u,p,l,c,h,m,d=this;return e9(this,function(f){var y;switch(f.label){case 0:return n=function(e){if(null==e)return e5({},tq);var t=e5({},e);return null==t.flipHorizontal&&(t.flipHorizontal=tq.flipHorizontal),null==t.staticImageMode&&(t.staticImageMode=tq.staticImageMode),t}(t),null==e?(this.reset(),[2,[]]):(r=tR(e),a=S.tidy(function(){var t=S.cast(tz(e),"float32");return n.flipHorizontal&&(t=S.squeeze(S.image.flipLeftRight(S.expandDims(t,0)),[0])),t}),i=this.prevFaceRectsFromLandmarks,n.staticImageMode||null==i||i.length<this.maxFaces?[4,this.detector.detectFaces(a,!1)]:[3,2]);case 1:return 0===(o=f.sent()).length?(this.reset(),a.dispose(),[2,[]]):(s=o.map(function(e){return d.faceDetectionFrontDetectionToRoi(e,r)}),[3,3]);case 2:s=[],f.label=3;case 3:return y=[],[s,i||[]].forEach(function(e){return e.forEach(function(e){(y=y.filter(function(t){return .5>=function(e,t){var n,r,a,i,s=tL(e),o=tL(t);if(s.xMax<o.xMin||o.xMax<s.xMin||s.yMax<o.yMin||o.yMax<s.yMin)return 0;var u=tD((n=Math.max(s.xMin,o.xMin),{xMin:n,xMax:r=Math.min(s.xMax,o.xMax),yMin:a=Math.max(s.yMin,o.yMin),yMax:i=Math.min(s.yMax,o.yMax),width:Math.max(r-n,0),height:Math.max(i-a,0)})),p=tD(s)+tD(o)-u;return p>0?u/p:0}(e,t)})).push(e)})}),[4,Promise.all(y.map(function(e){return d.faceLandmark(e,a)}))];case 4:for(u=f.sent(),p=[],this.prevFaceRectsFromLandmarks=[],l=0;l<u.length;++l)null!=(c=u[l])&&(this.prevFaceRectsFromLandmarks.push(this.faceLandmarksToRoi(c,r)),null!=(h=function(e,t){return e.map(function(e){var n=e5(e5({},e),{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(n.z=e.z*t.width),n})}(c,r))&&h.forEach(function(e,t){var n=tn.get(t);null!=n&&(e.name=n)}),m=tr(h),p.push({keypoints:h,box:m.locationData.relativeBoundingBox}));return a.dispose(),[2,p]}})})},e.prototype.dispose=function(){this.detector.dispose(),this.landmarkModel.dispose()},e.prototype.reset=function(){this.detector.reset(),this.prevFaceRectsFromLandmarks=null},e.prototype.faceDetectionFrontDetectionToRoi=function(e,t){return tH(tU(e,"boundingbox","normRect",t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:0}),t,tK)},e.prototype.faceLandmark=function(e,t){return e7(this,void 0,void 0,function(){var n,r,a,i,s,o,u;return e9(this,function(p){switch(p.label){case 0:var l,c,h,m,d,f,y,g,v,b,x,N,T,w,_,O,A,E,M,I;return n=(T=tX.outputTensorSize,w=tX.keepAspectRatio,_=tX.borderMode,O=tX.outputTensorFloatRange,M=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var r=t.height,a=t.width;tV(t,"targetSize"),tV(e,"roi");var i,s,o=r/a,u=e.height/e.width,p=0,l=0;return o>u?(i=e.width,s=e.width*o,l=(1-u/o)/2):(i=e.height/o,s=e.height,p=(1-o/u)/2),e.width=i,e.height=s,{top:l,left:p,right:p,bottom:l}}((l=A=tR(t),E=e?{xCenter:e.xCenter*l.width,yCenter:e.yCenter*l.height,width:e.width*l.width,height:e.height*l.height,rotation:e.rotation}:{xCenter:.5*l.width,yCenter:.5*l.height,width:l.width,height:l.height,rotation:0}),T,w),c=A.width,h=A.height,m=E.width,d=E.height,f=Math.cos(E.rotation),y=Math.sin(E.rotation),g=E.xCenter,v=E.yCenter,b=1/c,x=1/h,(N=Array(16))[0]=m*f*1*b,N[1]=-d*y*b,N[2]=0,N[3]=(-.5*m*f*1+.5*d*y+g)*b,N[4]=m*y*1*x,N[5]=d*f*x,N[6]=0,N[7]=(-.5*d*f-.5*m*y*1+v)*x,N[8]=0,N[9]=0,N[10]=m*b,N[11]=0,N[12]=0,N[13]=0,N[14]=0,N[15]=1,I=function(e){if(16!==e.length)throw Error("Array length must be 16 but got "+e.length);return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}(N),{imageTensor:S.tidy(function(){var e,n,r,a,i=tz(t),s=S.tensor2d((tV(T,"inputResolution"),[1/T.width*I[0][0]*A.width,1/T.height*I[0][1]*A.width,I[0][3]*A.width,1/T.width*I[1][0]*A.height,1/T.height*I[1][1]*A.height,I[1][3]*A.height,0,0]),[1,8]),o=S.image.transform(S.expandDims(S.cast(i,"float32")),s,"bilinear","zero"===_?"constant":"nearest",0,[T.height,T.width]);return null!=O?(e=0,n=O[0],a={scale:r=(O[1]-n)/255,offset:n-0*r},S.tidy(function(){return S.add(S.mul(o,a.scale),a.offset)})):o}),padding:M,transformationMatrix:I}).imageTensor,r=["output_faceflag"].concat(this.withAttention?["output_mesh_identity","output_lips","Identity_6:0","Identity_1:0","Identity_2:0","Identity_5:0"]:["output_mesh"]),i=(a=this.landmarkModel.execute(n,r))[0],s=a.slice(1),[4,i.data()];case 1:return p.sent()[0]<.5?(S.dispose(a),S.dispose(n),[2,null]):this.withAttention?[4,this.tensorsToFaceLandmarksWithAttention(s)]:[3,3];case 2:return o=p.sent(),[3,5];case 3:return[4,this.tensorsToFaceLandmarks(s)];case 4:o=p.sent(),p.label=5;case 5:return u=function(e,t,n){void 0===n&&(n={ignoreRotation:!1});for(var r=[],a=0;a<e.length;a++){var i=e[a],s=i.x-.5,o=i.y-.5,u=n.ignoreRotation?0:t.rotation,p=Math.cos(u)*s-Math.sin(u)*o,l=Math.sin(u)*s+Math.cos(u)*o;p=p*t.width+t.xCenter,l=l*t.height+t.yCenter;var c=i.z*t.width,h=e5({},i);h.x=p,h.y=l,h.z=c,r.push(h)}return r}(o,e),S.dispose(a),S.dispose(n),[2,u]}})})},e.prototype.tensorsToFaceLandmarks=function(e){return e7(this,void 0,void 0,function(){return e9(this,function(t){return[2,t$(e[0],tY)]})})},e.prototype.tensorsToFaceLandmarksWithAttention=function(e){return e7(this,void 0,void 0,function(){var t,n,r,a,i,s;return e9(this,function(o){switch(o.label){case 0:return[4,t$(e[0],tY)];case 1:return t=o.sent(),[4,t$(e[1],tQ)];case 2:return n=o.sent(),[4,t$(e[3],tJ)];case 3:return r=o.sent(),[4,t$(e[5],tJ)];case 4:return a=o.sent(),[4,t$(e[4],tZ)];case 5:return i=o.sent(),[4,t$(e[2],tZ)];case 6:return s=o.sent(),[2,function(e,t){for(var n=function(e){var t=[].concat.apply([],e.map(function(e){return e.indexesMapping}));if(0===t.length)throw Error("There should be at least one landmark in indexes mapping");var n=t[0],r=t[0],a=new Set(t);a.forEach(function(e){n=Math.min(n,e),r=Math.max(r,e)});var i=a.size;if(0!==n)throw Error("Indexes are expected to start with 0 instead of "+n);if(r+1!==i)throw Error("Indexes should have no gaps but "+(r-i+1)+" indexes are missing");return i}(t),r=Array(n).fill(null).map(Object),a=0;a<e.length;++a){var i=e[a],s=t[a];if(i.length!==s.indexesMapping.length)throw Error("There are "+i.length+" refinement landmarks while mapping has "+s.indexesMapping.length);(function(e,t,n){for(var r=0;r<t.length;++r){var a=t[r],i=n[e[r]];i.x=a.x,i.y=a.y}})(s.indexesMapping,i,r),function(e,t,n,r){if("string"==typeof t){if("copy"===t)for(var a=0;a<n.length;++a)r[e[a]].z=n[a].z}else{var i=function(e,t){for(var n=0,r=0;r<t.length;++r)n+=e[t[r]].z;return n/t.length}(r,t);for(a=0;a<e.length;++a)r[e[a]].z=i}}(s.indexesMapping,s.zRefinement,i,r)}return r}([t,n,r,a,i,s],[t1,t2,t3,t4,t0,t6])]}})})},e.prototype.faceLandmarksToRoi=function(e,t){return tH(tU(tr(e),"boundingbox","normRect",t,{rotationVectorStartKeypointIndex:33,rotationVectorEndKeypointIndex:263,rotationVectorTargetAngleDegree:0}),t,tK)},e}();function t7(e,t){return e7(this,void 0,void 0,function(){var n,r;return e9(this,function(a){if(e===tG.MediaPipeFaceMesh){if(r=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,function(e){return e7(this,void 0,void 0,function(){var t,n,r;return e9(this,function(a){switch(a.label){case 0:return n="string"==typeof(t=function(e){if(null==e)return e5({},tW);var t=e5({},e);return t.runtime="tfjs",null==t.maxFaces&&(t.maxFaces=tW.maxFaces),null==t.refineLandmarks&&(t.refineLandmarks=tW.refineLandmarks),null==t.landmarkModelUrl&&(t.landmarkModelUrl=t.refineLandmarks?"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/attention_mesh/1":"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/face_mesh/1"),t}(e)).landmarkModelUrl&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,e6(t.landmarkModelUrl,{fromTFHub:n})];case 1:return r=a.sent(),[4,function(e,t){return tp(this,void 0,void 0,function(){var n,r;return tl(this,function(a){if(e===t_.MediaPipeFaceDetector){if(r=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,function(e){return tp(this,void 0,void 0,function(){var t,n,r;return tl(this,function(a){switch(a.label){case 0:return n="string"==typeof(t=function(e){if(null==e)return tu({},tE);var t=tu({},e);return null==t.modelType&&(t.modelType=tE.modelType),null==t.maxFaces&&(t.maxFaces=tE.maxFaces),null==t.detectorModelUrl&&("full"===t.modelType?t.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/full/1":t.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"),t}(e)).detectorModelUrl&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,[4,e6(t.detectorModelUrl,{fromTFHub:n})];case 1:return r=a.sent(),[2,new tC(t.modelType,r,t.maxFaces)]}})})}(n)];if("mediapipe"===n.runtime)return[2,function(e){return tp(this,void 0,void 0,function(){var t;return tl(this,function(n){switch(n.label){case 0:return[4,(t=new tm(function(e){if(null==e)return tu({},th);var t=tu({},e);return t.runtime="mediapipe",null==t.modelType&&(t.modelType=th.modelType),null==t.maxFaces&&(t.maxFaces=th.maxFaces),t}(e))).initialize()];case 1:return n.sent(),[2,t]}})})}(n)];r=n.runtime}throw Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(r))}throw Error("".concat(e," is not a supported model name."))})})}(t_.MediaPipeFaceDetector,{modelType:"short",maxFaces:t.maxFaces,detectorModelUrl:t.detectorModelUrl,runtime:t.runtime})];case 2:return[2,new t5(a.sent(),r,t.maxFaces,t.refineLandmarks)]}})})}(n)];if("mediapipe"===n.runtime)return[2,function(e){return e7(this,void 0,void 0,function(){var t;return e9(this,function(n){switch(n.label){case 0:return[4,(t=new ti(function(e){if(null==e)return e5({},ta);var t=e5({},e);return t.runtime="mediapipe",null==t.maxFaces&&(t.maxFaces=ta.maxFaces),null==t.refineLandmarks&&(t.refineLandmarks=ta.refineLandmarks),t}(e))).initialize()];case 1:return n.sent(),[2,t]}})})}(n)];r=n.runtime}throw Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+r)}throw Error(e+" is not a supported model name.")})})}(tG||(tG={})).MediaPipeFaceMesh="MediaPipeFaceMesh";var t9=Object.freeze({__proto__:null,getKeypointIndexByContour:function(e){if(e===tG.MediaPipeFaceMesh)return te;throw Error("Model "+e+" is not supported.")},getAdjacentPairs:function(e){if(e===tG.MediaPipeFaceMesh)return tt;throw Error("Model "+e+" is not supported.")}})}}]);